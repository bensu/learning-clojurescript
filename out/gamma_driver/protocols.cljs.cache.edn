;; Analyzed by ClojureScript 0.0-3291
{:name gamma-driver.protocols, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires nil, :imports nil, :defs {frame-buffer {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/protocols.cljs", :line 13, :column 4, :end-line 13, :end-column 16, :protocol gamma-driver.protocols/IResource, :doc nil, :arglists (quote ([this spec]))}, :protocol gamma-driver.protocols/IResource, :name gamma-driver.protocols/frame-buffer, :variadic false, :file "out/gamma_driver/protocols.cljs", :end-column 16, :method-params ([this spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this spec])), :doc nil}, bind-attribute {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/protocols.cljs", :line 18, :column 4, :end-line 18, :end-column 18, :protocol gamma-driver.protocols/IBindVariable, :doc nil, :arglists (quote ([this program attribute input]))}, :protocol gamma-driver.protocols/IBindVariable, :name gamma-driver.protocols/bind-attribute, :variadic false, :file "out/gamma_driver/protocols.cljs", :end-column 18, :method-params ([this program attribute input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 18, :max-fixed-arity 4, :fn-var true, :arglists (quote ([this program attribute input])), :doc nil}, array-buffer {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/protocols.cljs", :line 10, :column 4, :end-line 10, :end-column 16, :protocol gamma-driver.protocols/IResource, :doc nil, :arglists (quote ([this spec]))}, :protocol gamma-driver.protocols/IResource, :name gamma-driver.protocols/array-buffer, :variadic false, :file "out/gamma_driver/protocols.cljs", :end-column 16, :method-params ([this spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 10, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this spec])), :doc nil}, program {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/protocols.cljs", :line 9, :column 4, :end-line 9, :end-column 11, :protocol gamma-driver.protocols/IResource, :doc nil, :arglists (quote ([this spec]))}, :protocol gamma-driver.protocols/IResource, :name gamma-driver.protocols/program, :variadic false, :file "out/gamma_driver/protocols.cljs", :end-column 11, :method-params ([this spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this spec])), :doc nil}, texture {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/protocols.cljs", :line 12, :column 4, :end-line 12, :end-column 11, :protocol gamma-driver.protocols/IResource, :doc nil, :arglists (quote ([this spec]))}, :protocol gamma-driver.protocols/IResource, :name gamma-driver.protocols/texture, :variadic false, :file "out/gamma_driver/protocols.cljs", :end-column 11, :method-params ([this spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this spec])), :doc nil}, bind {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/protocols.cljs", :line 23, :column 4, :end-line 23, :end-column 8, :protocol gamma-driver.protocols/IBind, :doc nil, :arglists (quote ([this program spec]))}, :protocol gamma-driver.protocols/IBind, :name gamma-driver.protocols/bind, :variadic false, :file "out/gamma_driver/protocols.cljs", :end-column 8, :method-params ([this program spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 23, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this program spec])), :doc nil}, draw-elements {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/protocols.cljs", :line 27, :column 4, :end-line 27, :end-column 17, :protocol gamma-driver.protocols/IDraw, :doc nil, :arglists (quote ([this program spec] [this program spec target])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([this program spec] [this program spec target]), :arglists ([this program spec] [this program spec target]), :arglists-meta (nil nil)}}, :protocol gamma-driver.protocols/IDraw, :name gamma-driver.protocols/draw-elements, :variadic false, :file "out/gamma_driver/protocols.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([this program spec] [this program spec target]), :arglists ([this program spec] [this program spec target]), :arglists-meta (nil nil)}, :method-params ([this program spec] [this program spec target]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 27, :max-fixed-arity 4, :fn-var true, :arglists ([this program spec] [this program spec target]), :doc nil}, bind-uniform {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/protocols.cljs", :line 20, :column 4, :end-line 20, :end-column 16, :protocol gamma-driver.protocols/IBindVariable, :doc nil, :arglists (quote ([this program uniform input]))}, :protocol gamma-driver.protocols/IBindVariable, :name gamma-driver.protocols/bind-uniform, :variadic false, :file "out/gamma_driver/protocols.cljs", :end-column 16, :method-params ([this program uniform input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 20, :max-fixed-arity 4, :fn-var true, :arglists (quote ([this program uniform input])), :doc nil}, IBind {:meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/protocols.cljs", :line 22, :column 14, :end-line 22, :end-column 19, :doc nil, :protocol-symbol true, :protocol-info {:methods {bind [[this program spec]]}}}, :protocol-symbol true, :name gamma-driver.protocols/IBind, :file "out/gamma_driver/protocols.cljs", :end-column 19, :column 1, :line 22, :protocol-info {:methods {bind [[this program spec]]}}, :info nil, :end-line 22, :impls #{}, :doc nil}, IContext {:meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/protocols.cljs", :line 4, :column 14, :end-line 4, :end-column 22, :doc nil, :protocol-symbol true, :protocol-info {:methods {configure [[this spec]], gl [[this]]}}}, :protocol-symbol true, :name gamma-driver.protocols/IContext, :file "out/gamma_driver/protocols.cljs", :end-column 22, :column 1, :line 4, :protocol-info {:methods {configure [[this spec]], gl [[this]]}}, :info nil, :end-line 4, :impls #{}, :doc nil}, release {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/protocols.cljs", :line 15, :column 4, :end-line 15, :end-column 11, :protocol gamma-driver.protocols/IResource, :doc nil, :arglists (quote ([this resource]))}, :protocol gamma-driver.protocols/IResource, :name gamma-driver.protocols/release, :variadic false, :file "out/gamma_driver/protocols.cljs", :end-column 11, :method-params ([this resource]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this resource])), :doc nil}, IResource {:meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/protocols.cljs", :line 8, :column 14, :end-line 8, :end-column 23, :doc nil, :protocol-symbol true, :protocol-info {:methods {program [[this spec]], array-buffer [[this spec]], element-array-buffer [[this spec]], texture [[this spec]], frame-buffer [[this spec]], render-buffer [[this spec]], release [[this resource]]}}}, :protocol-symbol true, :name gamma-driver.protocols/IResource, :file "out/gamma_driver/protocols.cljs", :end-column 23, :column 1, :line 8, :protocol-info {:methods {program [[this spec]], array-buffer [[this spec]], element-array-buffer [[this spec]], texture [[this spec]], frame-buffer [[this spec]], render-buffer [[this spec]], release [[this resource]]}}, :info nil, :end-line 8, :impls #{}, :doc nil}, IDraw {:meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/protocols.cljs", :line 25, :column 14, :end-line 25, :end-column 19, :doc nil, :protocol-symbol true, :protocol-info {:methods {draw-arrays [[this program spec] [this program spec target]], draw-elements [[this program spec] [this program spec target]]}}}, :protocol-symbol true, :name gamma-driver.protocols/IDraw, :file "out/gamma_driver/protocols.cljs", :end-column 19, :column 1, :line 25, :protocol-info {:methods {draw-arrays [[this program spec] [this program spec target]], draw-elements [[this program spec] [this program spec target]]}}, :info nil, :end-line 25, :impls #{}, :doc nil}, configure {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/protocols.cljs", :line 5, :column 4, :end-line 5, :end-column 13, :protocol gamma-driver.protocols/IContext, :doc nil, :arglists (quote ([this spec]))}, :protocol gamma-driver.protocols/IContext, :name gamma-driver.protocols/configure, :variadic false, :file "out/gamma_driver/protocols.cljs", :end-column 13, :method-params ([this spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 5, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this spec])), :doc nil}, draw-arrays {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/protocols.cljs", :line 26, :column 4, :end-line 26, :end-column 15, :protocol gamma-driver.protocols/IDraw, :doc nil, :arglists (quote ([this program spec] [this program spec target])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([this program spec] [this program spec target]), :arglists ([this program spec] [this program spec target]), :arglists-meta (nil nil)}}, :protocol gamma-driver.protocols/IDraw, :name gamma-driver.protocols/draw-arrays, :variadic false, :file "out/gamma_driver/protocols.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([this program spec] [this program spec target]), :arglists ([this program spec] [this program spec target]), :arglists-meta (nil nil)}, :method-params ([this program spec] [this program spec target]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 26, :max-fixed-arity 4, :fn-var true, :arglists ([this program spec] [this program spec target]), :doc nil}, element-array-buffer {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/protocols.cljs", :line 11, :column 4, :end-line 11, :end-column 24, :protocol gamma-driver.protocols/IResource, :doc nil, :arglists (quote ([this spec]))}, :protocol gamma-driver.protocols/IResource, :name gamma-driver.protocols/element-array-buffer, :variadic false, :file "out/gamma_driver/protocols.cljs", :end-column 24, :method-params ([this spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 11, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this spec])), :doc nil}, gl {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/protocols.cljs", :line 6, :column 4, :end-line 6, :end-column 6, :protocol gamma-driver.protocols/IContext, :doc nil, :arglists (quote ([this]))}, :protocol gamma-driver.protocols/IContext, :name gamma-driver.protocols/gl, :variadic false, :file "out/gamma_driver/protocols.cljs", :end-column 6, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, IBindVariable {:meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/protocols.cljs", :line 17, :column 14, :end-line 17, :end-column 27, :doc nil, :protocol-symbol true, :protocol-info {:methods {bind-attribute [[this program attribute input]], bind-texture-uniform [[this program uniform input]], bind-uniform [[this program uniform input]]}}}, :protocol-symbol true, :name gamma-driver.protocols/IBindVariable, :file "out/gamma_driver/protocols.cljs", :end-column 27, :column 1, :line 17, :protocol-info {:methods {bind-attribute [[this program attribute input]], bind-texture-uniform [[this program uniform input]], bind-uniform [[this program uniform input]]}}, :info nil, :end-line 17, :impls #{}, :doc nil}, render-buffer {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/protocols.cljs", :line 14, :column 4, :end-line 14, :end-column 17, :protocol gamma-driver.protocols/IResource, :doc nil, :arglists (quote ([this spec]))}, :protocol gamma-driver.protocols/IResource, :name gamma-driver.protocols/render-buffer, :variadic false, :file "out/gamma_driver/protocols.cljs", :end-column 17, :method-params ([this spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this spec])), :doc nil}, bind-texture-uniform {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/protocols.cljs", :line 19, :column 4, :end-line 19, :end-column 24, :protocol gamma-driver.protocols/IBindVariable, :doc nil, :arglists (quote ([this program uniform input]))}, :protocol gamma-driver.protocols/IBindVariable, :name gamma-driver.protocols/bind-texture-uniform, :variadic false, :file "out/gamma_driver/protocols.cljs", :end-column 24, :method-params ([this program uniform input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 19, :max-fixed-arity 4, :fn-var true, :arglists (quote ([this program uniform input])), :doc nil}}}