;; Analyzed by ClojureScript 0.0-3291
{:use-macros nil, :excludes #{}, :name gamma-driver.impl.resource, :imports nil, :requires {ggl goog.webgl, goog.webgl goog.webgl}, :uses nil, :defs {frame-buffer {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/impl/resource.cljs", :line 280, :column 7, :end-line 280, :end-column 19, :arglists (quote ([gl spec]))}, :name gamma-driver.impl.resource/frame-buffer, :variadic false, :file "out/gamma_driver/impl/resource.cljs", :end-column 19, :method-params ([gl spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 280, :end-line 280, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl spec]))}, array-buffer {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/impl/resource.cljs", :line 51, :column 7, :end-line 51, :end-column 19, :arglists (quote ([gl spec]))}, :name gamma-driver.impl.resource/array-buffer, :variadic false, :file "out/gamma_driver/impl/resource.cljs", :end-column 19, :method-params ([gl spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl spec]))}, program {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/impl/resource.cljs", :line 23, :column 7, :end-line 23, :end-column 14, :arglists (quote ([gl spec]))}, :name gamma-driver.impl.resource/program, :variadic false, :file "out/gamma_driver/impl/resource.cljs", :end-column 14, :method-params ([gl spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl spec]))}, texture {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/impl/resource.cljs", :line 194, :column 7, :end-line 194, :end-column 14, :arglists (quote ([gl spec]))}, :name gamma-driver.impl.resource/texture, :variadic false, :file "out/gamma_driver/impl/resource.cljs", :end-column 14, :method-params ([gl spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 194, :end-line 194, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl spec]))}, shader {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/impl/resource.cljs", :line 5, :column 7, :end-line 5, :end-column 13, :arglists (quote ([gl spec]))}, :name gamma-driver.impl.resource/shader, :variadic false, :file "out/gamma_driver/impl/resource.cljs", :end-column 13, :method-params ([gl spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl spec]))}, texture-filter {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/impl/resource.cljs", :line 117, :column 8, :end-line 117, :end-column 22, :private true, :arglists (quote ([gl spec]))}, :private true, :name gamma-driver.impl.resource/texture-filter, :variadic false, :file "out/gamma_driver/impl/resource.cljs", :end-column 22, :method-params ([gl spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl spec]))}, texture-wrap-constants {:name gamma-driver.impl.resource/texture-wrap-constants, :file "out/gamma_driver/impl/resource.cljs", :line 87, :column 1, :end-line 87, :end-column 28, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/impl/resource.cljs", :line 87, :column 6, :end-line 87, :end-column 28}}, texture-formats {:name gamma-driver.impl.resource/texture-formats, :file "out/gamma_driver/impl/resource.cljs", :line 146, :column 1, :end-line 146, :end-column 21, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/impl/resource.cljs", :line 146, :column 6, :end-line 146, :end-column 21}}, frame-buffer-attachment {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/impl/resource.cljs", :line 258, :column 7, :end-line 258, :end-column 30, :arglists (quote ([gl fb [attachment attachment-point]]))}, :name gamma-driver.impl.resource/frame-buffer-attachment, :variadic false, :file "out/gamma_driver/impl/resource.cljs", :end-column 30, :method-params ([gl fb p__19417]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 258, :end-line 258, :max-fixed-arity 3, :fn-var true, :arglists (quote ([gl fb [attachment attachment-point]]))}, texture-data-types {:name gamma-driver.impl.resource/texture-data-types, :file "out/gamma_driver/impl/resource.cljs", :line 153, :column 1, :end-line 153, :end-column 24, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/impl/resource.cljs", :line 153, :column 6, :end-line 153, :end-column 24}}, renderbuffer-formats {:name gamma-driver.impl.resource/renderbuffer-formats, :file "out/gamma_driver/impl/resource.cljs", :line 238, :column 1, :end-line 238, :end-column 26, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/impl/resource.cljs", :line 238, :column 6, :end-line 238, :end-column 26}}, texture-filter-constants {:name gamma-driver.impl.resource/texture-filter-constants, :file "out/gamma_driver/impl/resource.cljs", :line 109, :column 1, :end-line 109, :end-column 30, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/impl/resource.cljs", :line 109, :column 6, :end-line 109, :end-column 30}}, release {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/impl/resource.cljs", :line 301, :column 7, :end-line 301, :end-column 14, :arglists (quote ([gl spec]))}, :name gamma-driver.impl.resource/release, :variadic false, :file "out/gamma_driver/impl/resource.cljs", :end-column 14, :method-params ([gl spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 301, :end-line 301, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl spec]))}, texture-unpack {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/impl/resource.cljs", :line 81, :column 8, :end-line 81, :end-column 22, :private true, :arglists (quote ([gl spec]))}, :private true, :name gamma-driver.impl.resource/texture-unpack, :variadic false, :file "out/gamma_driver/impl/resource.cljs", :end-column 22, :method-params ([gl spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl spec]))}, texture-data-type {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/impl/resource.cljs", :line 132, :column 7, :end-line 132, :end-column 24, :arglists (quote ([d]))}, :name gamma-driver.impl.resource/texture-data-type, :variadic false, :file "out/gamma_driver/impl/resource.cljs", :end-column 24, :method-params ([d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 132, :end-line 132, :max-fixed-arity 1, :fn-var true, :arglists (quote ([d]))}, texture-wrap {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/impl/resource.cljs", :line 93, :column 8, :end-line 93, :end-column 20, :private true, :arglists (quote ([gl spec]))}, :private true, :name gamma-driver.impl.resource/texture-wrap, :variadic false, :file "out/gamma_driver/impl/resource.cljs", :end-column 20, :method-params ([gl spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl spec]))}, element-array-buffer {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/impl/resource.cljs", :line 65, :column 7, :end-line 65, :end-column 27, :arglists (quote ([gl spec]))}, :name gamma-driver.impl.resource/element-array-buffer, :variadic false, :file "out/gamma_driver/impl/resource.cljs", :end-column 27, :method-params ([gl spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl spec]))}, render-buffer {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/impl/resource.cljs", :line 245, :column 7, :end-line 245, :end-column 20, :arglists (quote ([gl spec]))}, :name gamma-driver.impl.resource/render-buffer, :variadic false, :file "out/gamma_driver/impl/resource.cljs", :end-column 20, :method-params ([gl spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 245, :end-line 245, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl spec]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:format-type :unsigned-short-5-5-5-1 :min :nearest :format :unsigned-short-4-4-4-4 :static-draw :rgba :fragment-shader :unsigned-short-5-6-5 :wrap :glsl :color :dynamic-draw :mirrored-repeat :mag :texture-id :rgb565 :depth-component16 :unpack :rgb :width :luminance-alpha :nearest-mipmap-linear :s :vertex-shader :luminance :usage :filter :rgb5-a1 :rgba4 :stencil-index8 :element-array-buffer :depth-stencil :alpha :render-buffer :repeat :image :clamp-to-edge :depth :linear-mipmap-nearest :t :tag :linear :frame-buffer :linear-mipmap-linear :unsigned-byte :pixels :array-buffer :program :texture :nearest-mipmap-nearest :stencil :height :flip-y :data}, :order [:vertex-shader :fragment-shader :tag :glsl :program :array-buffer :data :static-draw :dynamic-draw :usage :element-array-buffer :flip-y :repeat :clamp-to-edge :mirrored-repeat :s :t :linear :nearest :nearest-mipmap-nearest :linear-mipmap-nearest :nearest-mipmap-linear :linear-mipmap-linear :min :mag :image :pixels :alpha :luminance :luminance-alpha :rgb :rgba :unsigned-byte :unsigned-short-5-6-5 :unsigned-short-4-4-4-4 :unsigned-short-5-5-5-1 :texture :format-type :width :height :unpack :filter :wrap :texture-id :depth-component16 :rgba4 :rgb5-a1 :rgb565 :stencil-index8 :format :render-buffer :color :depth :stencil :depth-stencil :frame-buffer]}, :doc nil}