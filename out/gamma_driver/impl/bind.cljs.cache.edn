;; Analyzed by ClojureScript 0.0-3308
{:use-macros nil, :excludes #{}, :name gamma-driver.impl.bind, :imports nil, :requires nil, :uses nil, :defs {bind-dispatch-fn {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/impl/bind.cljs", :line 3, :column 7, :end-line 3, :end-column 23, :arglists (quote ([element data]))}, :name gamma-driver.impl.bind/bind-dispatch-fn, :variadic false, :file "out/gamma_driver/impl/bind.cljs", :end-column 23, :method-params ([element data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 2, :fn-var true, :arglists (quote ([element data]))}, bind* {:name gamma-driver.impl.bind/bind*, :file "out/gamma_driver/impl/bind.cljs", :line 16, :column 1, :end-line 16, :end-column 16, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/impl/bind.cljs", :line 16, :column 11, :end-line 16, :end-column 16}}, bind {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/impl/bind.cljs", :line 87, :column 7, :end-line 87, :end-column 11, :arglists (quote ([fns driver program data]))}, :name gamma-driver.impl.bind/bind, :variadic false, :file "out/gamma_driver/impl/bind.cljs", :end-column 11, :method-params ([fns driver program data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 4, :fn-var true, :arglists (quote ([fns driver program data]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:attribute :bind-uniform :static-draw :texture-uniform :variable :element :default :type :usage :uniform :element-array-buffer :count :element-index :storage :bind-texture-uniform :tag :hierarchy :array-buffer :program :bind-attribute :sampler2D :variable-array :texture :data}, :order [:variable :tag :attribute :storage :uniform :sampler2D :type :texture-uniform :element-index :variable-array :hierarchy :default :bind-attribute :array-buffer :data :usage :static-draw :element :count :bind-uniform :element-array-buffer :bind-texture-uniform :texture :program]}, :doc nil}