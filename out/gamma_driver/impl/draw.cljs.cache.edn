;; Analyzed by ClojureScript 0.0-3291
{:use-macros nil, :excludes #{mask}, :name gamma-driver.impl.draw, :imports nil, :requires {ggl goog.webgl, goog.webgl goog.webgl}, :uses nil, :defs {clear {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/impl/draw.cljs", :line 6, :column 7, :end-line 6, :end-column 12, :arglists (quote ([gl spec]))}, :name gamma-driver.impl.draw/clear, :variadic false, :file "out/gamma_driver/impl/draw.cljs", :end-column 12, :method-params ([gl spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl spec]))}, mask {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/impl/draw.cljs", :line 8, :column 7, :end-line 8, :end-column 11, :arglists (quote ([gl spec]))}, :name gamma-driver.impl.draw/mask, :variadic false, :file "out/gamma_driver/impl/draw.cljs", :end-column 11, :method-params ([gl spec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gl spec]))}, draw-modes {:name gamma-driver.impl.draw/draw-modes, :file "out/gamma_driver/impl/draw.cljs", :line 11, :column 1, :end-line 11, :end-column 16, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/impl/draw.cljs", :line 11, :column 6, :end-line 11, :end-column 16}}, draw-arrays {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/impl/draw.cljs", :line 20, :column 7, :end-line 20, :end-column 18, :arglists (quote ([gl program opts] [gl program opts target])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([gl program opts] [gl program opts target]), :arglists ([gl program opts] [gl program opts target]), :arglists-meta (nil nil)}}, :name gamma-driver.impl.draw/draw-arrays, :variadic false, :file "out/gamma_driver/impl/draw.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([gl program opts] [gl program opts target]), :arglists ([gl program opts] [gl program opts target]), :arglists-meta (nil nil)}, :method-params ([gl program opts] [gl program opts target]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 4, :fn-var true, :arglists ([gl program opts] [gl program opts target])}, element-types {:name gamma-driver.impl.draw/element-types, :file "out/gamma_driver/impl/draw.cljs", :line 38, :column 1, :end-line 38, :end-column 19, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/impl/draw.cljs", :line 38, :column 6, :end-line 38, :end-column 19}}, draw-elements {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma_driver/impl/draw.cljs", :line 42, :column 7, :end-line 42, :end-column 20, :arglists (quote ([gl program opts] [gl program opts target])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([gl program opts] [gl program opts target]), :arglists ([gl program opts] [gl program opts target]), :arglists-meta (nil nil)}}, :name gamma-driver.impl.draw/draw-elements, :variadic false, :file "out/gamma_driver/impl/draw.cljs", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([gl program opts] [gl program opts target]), :arglists ([gl program opts] [gl program opts target]), :arglists-meta (nil nil)}, :method-params ([gl program opts] [gl program opts target]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 4, :fn-var true, :arglists ([gl program opts] [gl program opts target])}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:line-strip :lines :points :triangle-fan :count :draw-mode :line-loop :unsigned-short :first :frame-buffer :index-type :unsigned-byte :program :triangle-strip :triangles}, :order [:lines :line-strip :line-loop :points :triangle-strip :triangle-fan :triangles :program :draw-mode :first :count :frame-buffer :unsigned-byte :unsigned-short :index-type]}, :doc nil}