;; Analyzed by ClojureScript 0.0-3308
{:use-macros nil, :excludes #{}, :name gamma.compiler.move-assignments, :imports nil, :requires {gamma.ast gamma.ast, gamma.compiler.common gamma.compiler.common}, :uses {id? gamma.ast, gen-term-id gamma.ast, assoc-in-location gamma.compiler.common, map-path gamma.compiler.common, get-element gamma.compiler.common, assoc-elements gamma.compiler.common}, :defs {helper {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma/compiler/move_assignments.cljs", :line 9, :column 7, :end-line 9, :end-column 13, :arglists (quote ([db location]))}, :name gamma.compiler.move-assignments/helper, :variadic false, :file "out/gamma/compiler/move_assignments.cljs", :end-column 13, :method-params ([db location]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db location]))}, move-assignments {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma/compiler/move_assignments.cljs", :line 20, :column 7, :end-line 20, :end-column 23, :arglists (quote ([]))}, :name gamma.compiler.move-assignments/move-assignments, :variadic false, :file "out/gamma/compiler/move_assignments.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:assignments :block :head :id :body}, :order [:block :head :assignments :body :id]}, :doc nil}