;; Analyzed by ClojureScript 0.0-3308
{:use-macros nil, :excludes #{}, :name gamma.compiler.insert-assignments, :imports nil, :requires {gamma.ast gamma.ast, gamma.compiler.common gamma.compiler.common}, :uses {id? gamma.ast, gen-term-id gamma.ast, assoc-in-location gamma.compiler.common, map-path gamma.compiler.common, get-element gamma.compiler.common, assoc-elements gamma.compiler.common}, :defs {insert-assignment {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma/compiler/insert_assignments.cljs", :line 6, :column 7, :end-line 6, :end-column 24, :arglists (quote ([db location target-id]))}, :name gamma.compiler.insert-assignments/insert-assignment, :variadic false, :file "out/gamma/compiler/insert_assignments.cljs", :end-column 24, :method-params ([db location target-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 3, :fn-var true, :arglists (quote ([db location target-id]))}, insert-assignments-sub {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma/compiler/insert_assignments.cljs", :line 39, :column 7, :end-line 39, :end-column 29, :arglists (quote ([target-id]))}, :name gamma.compiler.insert-assignments/insert-assignments-sub, :variadic false, :file "out/gamma/compiler/insert_assignments.cljs", :end-column 29, :method-params ([target-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([target-id]))}, insert-assignments {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma/compiler/insert_assignments.cljs", :line 19, :column 7, :end-line 19, :end-column 25, :arglists (quote ([]))}, :name gamma.compiler.insert-assignments/insert-assignments, :variadic false, :file "out/gamma/compiler/insert_assignments.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, in-path {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma/compiler/insert_assignments.cljs", :line 32, :column 7, :end-line 32, :end-column 14, :arglists (quote ([[a b] f]))}, :name gamma.compiler.insert-assignments/in-path, :variadic false, :file "out/gamma/compiler/insert_assignments.cljs", :end-column 14, :method-params ([p__20242 f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[a b] f]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:assignments :block :variable :parent :if :value :type :term :head :id :literal :tag :set :body}, :order [:id :parent :head :body :tag :set :term :value :literal :type :variable :block :assignments :if]}, :doc nil}