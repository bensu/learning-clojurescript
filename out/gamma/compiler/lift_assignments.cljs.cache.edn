;; Analyzed by ClojureScript 0.0-3291
{:use-macros nil, :excludes #{}, :name gamma.compiler.lift-assignments, :imports nil, :requires {gamma.ast gamma.ast, gamma.compiler.common gamma.compiler.common}, :uses {id? gamma.ast, gen-term-id gamma.ast, map-path gamma.compiler.common, get-element gamma.compiler.common}, :defs {liftable? {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma/compiler/lift_assignments.cljs", :line 7, :column 7, :end-line 7, :end-column 16, :arglists (quote ([db location]))}, :name gamma.compiler.lift-assignments/liftable?, :variadic false, :file "out/gamma/compiler/lift_assignments.cljs", :end-column 16, :method-params ([db location]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db location]))}, lift-assignments-sub {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma/compiler/lift_assignments.cljs", :line 21, :column 7, :end-line 21, :end-column 27, :arglists (quote ([db location target-block-id]))}, :name gamma.compiler.lift-assignments/lift-assignments-sub, :variadic false, :file "out/gamma/compiler/lift_assignments.cljs", :end-column 27, :method-params ([db location target-block-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 3, :fn-var true, :arglists (quote ([db location target-block-id]))}, get-target {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma/compiler/lift_assignments.cljs", :line 26, :column 7, :end-line 26, :end-column 17, :arglists (quote ([db location target-block-id]))}, :name gamma.compiler.lift-assignments/get-target, :variadic false, :file "out/gamma/compiler/lift_assignments.cljs", :end-column 17, :method-params ([db location target-block-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 3, :fn-var true, :arglists (quote ([db location target-block-id]))}, lift-assignments {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma/compiler/lift_assignments.cljs", :line 35, :column 7, :end-line 35, :end-column 23, :arglists (quote ([target-block-id]))}, :name gamma.compiler.lift-assignments/lift-assignments, :variadic false, :file "out/gamma/compiler/lift_assignments.cljs", :end-column 23, :method-params ([target-block-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([target-block-id]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:path :assignments :block :parent :if :env :head :id :shared :body}, :order [:shared :path :parent :if :head :env :id :assignments :block :body]}, :doc nil}