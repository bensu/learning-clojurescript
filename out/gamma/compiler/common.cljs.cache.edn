;; Analyzed by ClojureScript 0.0-3308
{:use-macros nil, :excludes #{}, :name gamma.compiler.common, :imports nil, :requires {gamma.ast gamma.ast}, :uses {id? gamma.ast, term gamma.ast}, :defs {get-element {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma/compiler/common.cljs", :line 4, :column 7, :end-line 4, :end-column 18, :arglists (quote ([db location]))}, :name gamma.compiler.common/get-element, :variadic false, :file "out/gamma/compiler/common.cljs", :end-column 18, :method-params ([db location]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db location]))}, map-path {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma/compiler/common.cljs", :line 7, :column 7, :end-line 7, :end-column 15, :arglists (quote ([f]))}, :name gamma.compiler.common/map-path, :variadic false, :file "out/gamma/compiler/common.cljs", :end-column 15, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, assoc-in-location {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma/compiler/common.cljs", :line 17, :column 7, :end-line 17, :end-column 24, :arglists (quote ([db location val]))}, :name gamma.compiler.common/assoc-in-location, :variadic false, :file "out/gamma/compiler/common.cljs", :end-column 24, :method-params ([db location val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 3, :fn-var true, :arglists (quote ([db location val]))}, assoc-in-parent {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma/compiler/common.cljs", :line 22, :column 7, :end-line 22, :end-column 22, :arglists (quote ([db location value]))}, :name gamma.compiler.common/assoc-in-parent, :variadic false, :file "out/gamma/compiler/common.cljs", :end-column 22, :method-params ([db location value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 3, :fn-var true, :arglists (quote ([db location value]))}, location-conj {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma/compiler/common.cljs", :line 29, :column 7, :end-line 29, :end-column 20, :arglists (quote ([db location key]))}, :name gamma.compiler.common/location-conj, :variadic false, :file "out/gamma/compiler/common.cljs", :end-column 20, :method-params ([db location key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 3, :fn-var true, :arglists (quote ([db location key]))}, merge-elements {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma/compiler/common.cljs", :line 37, :column 7, :end-line 37, :end-column 21, :arglists (quote ([db elements] [db location elements])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([db elements] [db location elements]), :arglists ([db elements] [db location elements]), :arglists-meta (nil nil)}}, :name gamma.compiler.common/merge-elements, :variadic false, :file "out/gamma/compiler/common.cljs", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([db elements] [db location elements]), :arglists ([db elements] [db location elements]), :arglists-meta (nil nil)}, :method-params ([db elements] [db location elements]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 3, :fn-var true, :arglists ([db elements] [db location elements])}, assoc-elements {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma/compiler/common.cljs", :line 43, :column 7, :end-line 43, :end-column 21, :arglists (quote ([db elements] [db location elements])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([db elements] [db location elements]), :arglists ([db elements] [db location elements]), :arglists-meta (nil nil)}}, :name gamma.compiler.common/assoc-elements, :variadic false, :file "out/gamma/compiler/common.cljs", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([db elements] [db location elements]), :arglists ([db elements] [db location elements]), :arglists-meta (nil nil)}, :method-params ([db elements] [db location elements]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 3, :fn-var true, :arglists ([db elements] [db location elements])}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:path :parent :id}, :order [:id :path :parent]}, :doc nil}