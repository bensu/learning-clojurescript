;; Analyzed by ClojureScript 0.0-3291
{:use-macros nil, :excludes #{}, :name gamma.compiler.bubble-term, :imports nil, :requires {gamma.ast gamma.ast}, :uses {id? gamma.ast}, :defs {parent-bubbles {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma/compiler/bubble_term.cljs", :line 5, :column 7, :end-line 5, :end-column 21, :arglists (quote ([db bubble]))}, :name gamma.compiler.bubble-term/parent-bubbles, :variadic false, :file "out/gamma/compiler/bubble_term.cljs", :end-column 21, :method-params ([db bubble]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db bubble]))}, bubble-term {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma/compiler/bubble_term.cljs", :line 16, :column 7, :end-line 16, :end-column 18, :arglists (quote ([db queue]))}, :name gamma.compiler.bubble-term/bubble-term, :variadic false, :file "out/gamma/compiler/bubble_term.cljs", :end-column 18, :method-params ([db queue]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db queue]))}, bubble-terms {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/gamma/compiler/bubble_term.cljs", :line 51, :column 7, :end-line 51, :end-column 19, :arglists (quote ([db]))}, :name gamma.compiler.bubble-term/bubble-terms, :variadic false, :file "out/gamma/compiler/bubble_term.cljs", :end-column 19, :method-params ([db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([db]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:if :start :head :root :id :current :parents :shared :unconditional :conditional}, :order [:if :head :current :conditional :parents :root :shared :start :unconditional :id]}, :doc nil}