;; Analyzed by ClojureScript 0.0-3308
{:use-macros nil, :excludes #{}, :name thi.ng.geom.core.matrix, :imports nil, :requires {thi.ng.geom.core.utils thi.ng.geom.core.utils, thi.ng.geom.core thi.ng.geom.core, gu thi.ng.geom.core.utils, v thi.ng.geom.core.vector, thi.ng.geom.core.vector thi.ng.geom.core.vector, m thi.ng.common.math.core, err thi.ng.common.error, g thi.ng.geom.core, thi.ng.common.math.core thi.ng.common.math.core, thi.ng.common.error thi.ng.common.error}, :uses {TWO_PI thi.ng.common.math.core, vec3 thi.ng.geom.core.vector, PI thi.ng.common.math.core, V3 thi.ng.geom.core.vector, vec2 thi.ng.geom.core.vector, *eps* thi.ng.common.math.core, V3X thi.ng.geom.core.vector}, :defs {frustum-bounds {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/matrix.cljs", :line 617, :column 7, :end-line 617, :end-column 21, :arglists (quote ([fovy aspect near]))}, :name thi.ng.geom.core.matrix/frustum-bounds, :variadic false, :file "out/thi/ng/geom/core/matrix.cljs", :end-column 21, :method-params ([fovy aspect near]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 617, :end-line 617, :max-fixed-arity 3, :fn-var true, :arglists (quote ([fovy aspect near]))}, unproject-point {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/matrix.cljs", :line 705, :column 7, :end-line 705, :end-column 22, :arglists (quote ([p model-view proj screen-rect] [[x y z] inv-mat {[vx vy] :p, [w h] :size}])), :doc "Takes a vec3 in screenspace, model-view matrix, projection matrix\n  and screen rect. Returns vector in model space or nil if matrix is\n  not invertible.", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([p model-view proj screen-rect] [[x y z] inv-mat {[vx vy] :p, [w h] :size}]), :arglists ([p model-view proj screen-rect] [[x y z] inv-mat {[vx vy] :p, [w h] :size}]), :arglists-meta (nil nil)}}, :name thi.ng.geom.core.matrix/unproject-point, :variadic false, :file "out/thi/ng/geom/core/matrix.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([p model-view proj screen-rect] [[x y z] inv-mat {[vx vy] :p, [w h] :size}]), :arglists ([p model-view proj screen-rect] [[x y z] inv-mat {[vx vy] :p, [w h] :size}]), :arglists-meta (nil nil)}, :method-params ([p model-view proj screen-rect] [[x y z] inv-mat {[vx vy] :p, [w h] :size}]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 705, :end-line 705, :max-fixed-arity 4, :fn-var true, :arglists ([p model-view proj screen-rect] [[x y z] inv-mat {[vx vy] :p, [w h] :size}]), :doc "Takes a vec3 in screenspace, model-view matrix, projection matrix\n  and screen rect. Returns vector in model space or nil if matrix is\n  not invertible."}, project-point {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/matrix.cljs", :line 695, :column 7, :end-line 695, :end-column 20, :arglists (quote ([p mvp vtx]))}, :name thi.ng.geom.core.matrix/project-point, :variadic false, :file "out/thi/ng/geom/core/matrix.cljs", :end-column 20, :method-params ([p mvp vtx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 695, :end-line 695, :max-fixed-arity 3, :fn-var true, :arglists (quote ([p mvp vtx]))}, project-point-z {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/matrix.cljs", :line 700, :column 7, :end-line 700, :end-column 22, :arglists (quote ([p mvp vtx]))}, :name thi.ng.geom.core.matrix/project-point-z, :variadic false, :file "out/thi/ng/geom/core/matrix.cljs", :end-column 22, :method-params ([p mvp vtx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 700, :end-line 700, :max-fixed-arity 3, :fn-var true, :arglists (quote ([p mvp vtx]))}, ->Matrix32 {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/matrix.cljs", :line 25, :column 10, :end-line 25, :end-column 18, :protocols #{thi.ng.geom.core/PScale cljs.core/IIndexed cljs.core/IEquiv cljs.core/IHash thi.ng.geom.core/PMathOps cljs.core/ICollection thi.ng.geom.core/PTranslate thi.ng.geom.core/PShear thi.ng.geom.core.matrix/Object thi.ng.common.math.core/PDeltaEquals thi.ng.geom.core/PTransform cljs.core/ICounted thi.ng.geom.core/PTranspose cljs.core/ISeq cljs.core/INext thi.ng.geom.core/PVectorTransform cljs.core/ISeqable thi.ng.geom.core/PRotate cljs.core/IMeta thi.ng.geom.core/PDeterminant cljs.core/ISequential cljs.core/IWithMeta thi.ng.geom.core/PInvert}, :skip-protocol-flag #{cljs.core/IIndexed cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeq cljs.core/INext cljs.core/ISeqable cljs.core/IMeta cljs.core/ISequential cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([m00 m01 m02 m10 m11 m12 _hasheq _meta]))}, :protocols #{thi.ng.geom.core/PScale cljs.core/IIndexed cljs.core/IEquiv cljs.core/IHash thi.ng.geom.core/PMathOps cljs.core/ICollection thi.ng.geom.core/PTranslate thi.ng.geom.core/PShear thi.ng.geom.core.matrix/Object thi.ng.common.math.core/PDeltaEquals thi.ng.geom.core/PTransform cljs.core/ICounted thi.ng.geom.core/PTranspose cljs.core/ISeq cljs.core/INext thi.ng.geom.core/PVectorTransform cljs.core/ISeqable thi.ng.geom.core/PRotate cljs.core/IMeta thi.ng.geom.core/PDeterminant cljs.core/ISequential cljs.core/IWithMeta thi.ng.geom.core/PInvert}, :name thi.ng.geom.core.matrix/->Matrix32, :variadic false, :file "out/thi/ng/geom/core/matrix.cljs", :end-column 18, :method-params ([m00 m01 m02 m10 m11 m12 _hasheq _meta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 25, :end-line 25, :max-fixed-arity 8, :fn-var true, :arglists (quote ([m00 m01 m02 m10 m11 m12 _hasheq _meta])), :skip-protocol-flag #{cljs.core/IIndexed cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeq cljs.core/INext cljs.core/ISeqable cljs.core/IMeta cljs.core/ISequential cljs.core/IWithMeta}}, viewport-matrix {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/matrix.cljs", :line 685, :column 7, :end-line 685, :end-column 22, :arglists (quote ([width height] [width height invert-y?])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([width height] [width height invert-y?]), :arglists ([width height] [width height invert-y?]), :arglists-meta (nil nil)}}, :name thi.ng.geom.core.matrix/viewport-matrix, :variadic false, :file "out/thi/ng/geom/core/matrix.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([width height] [width height invert-y?]), :arglists ([width height] [width height invert-y?]), :arglists-meta (nil nil)}, :method-params ([width height] [width height invert-y?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 685, :end-line 685, :max-fixed-arity 3, :fn-var true, :arglists ([width height] [width height invert-y?])}, look-at {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/matrix.cljs", :line 668, :column 7, :end-line 668, :end-column 14, :arglists (quote ([eye target up])), :doc "Returns a matrix that puts the camera at the eye position looking\n  toward the target point with the given up direction."}, :name thi.ng.geom.core.matrix/look-at, :variadic false, :file "out/thi/ng/geom/core/matrix.cljs", :end-column 14, :method-params ([eye target up]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 668, :end-line 668, :max-fixed-arity 3, :fn-var true, :arglists (quote ([eye target up])), :doc "Returns a matrix that puts the camera at the eye position looking\n  toward the target point with the given up direction."}, matrix32 {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/matrix.cljs", :line 566, :column 7, :end-line 566, :end-column 15, :arglists (quote ([] [[m00 m01 m02 m10 m11 m12]] [m00 m01 m02 m10 m11 m12])), :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([] [[m00 m01 m02 m10 m11 m12]] [m00 m01 m02 m10 m11 m12]), :arglists ([] [[m00 m01 m02 m10 m11 m12]] [m00 m01 m02 m10 m11 m12]), :arglists-meta (nil nil nil)}}, :name thi.ng.geom.core.matrix/matrix32, :variadic false, :file "out/thi/ng/geom/core/matrix.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([] [[m00 m01 m02 m10 m11 m12]] [m00 m01 m02 m10 m11 m12]), :arglists ([] [[m00 m01 m02 m10 m11 m12]] [m00 m01 m02 m10 m11 m12]), :arglists-meta (nil nil nil)}, :method-params ([] [[m00 m01 m02 m10 m11 m12]] [m00 m01 m02 m10 m11 m12]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 566, :end-line 566, :max-fixed-arity 6, :fn-var true, :arglists ([] [[m00 m01 m02 m10 m11 m12]] [m00 m01 m02 m10 m11 m12])}, M32 {:name thi.ng.geom.core.matrix/M32, :file "out/thi/ng/geom/core/matrix.cljs", :line 552, :column 1, :end-line 552, :end-column 9, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/matrix.cljs", :line 552, :column 6, :end-line 552, :end-column 9}}, Matrix32 {:num-fields 8, :protocols #{thi.ng.geom.core/PScale cljs.core/IIndexed cljs.core/IEquiv cljs.core/IHash thi.ng.geom.core/PMathOps cljs.core/ICollection thi.ng.geom.core/PTranslate thi.ng.geom.core/PShear thi.ng.geom.core.matrix/Object thi.ng.common.math.core/PDeltaEquals thi.ng.geom.core/PTransform cljs.core/ICounted thi.ng.geom.core/PTranspose cljs.core/ISeq cljs.core/INext thi.ng.geom.core/PVectorTransform cljs.core/ISeqable thi.ng.geom.core/PRotate cljs.core/IMeta thi.ng.geom.core/PDeterminant cljs.core/ISequential cljs.core/IWithMeta thi.ng.geom.core/PInvert}, :name thi.ng.geom.core.matrix/Matrix32, :file "out/thi/ng/geom/core/matrix.cljs", :end-column 18, :type true, :column 10, :line 25, :record false, :end-line 25, :skip-protocol-flag #{cljs.core/IIndexed cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeq cljs.core/INext cljs.core/ISeqable cljs.core/IMeta cljs.core/ISequential cljs.core/IWithMeta}}, M44 {:name thi.ng.geom.core.matrix/M44, :file "out/thi/ng/geom/core/matrix.cljs", :line 558, :column 1, :end-line 558, :end-column 9, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/matrix.cljs", :line 558, :column 6, :end-line 558, :end-column 9}}, look-at-vectors {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/matrix.cljs", :line 661, :column 7, :end-line 661, :end-column 22, :arglists (quote ([ex ey ez tx ty tz]))}, :name thi.ng.geom.core.matrix/look-at-vectors, :variadic false, :file "out/thi/ng/geom/core/matrix.cljs", :end-column 22, :method-params ([ex ey ez tx ty tz]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 661, :end-line 661, :max-fixed-arity 6, :fn-var true, :arglists (quote ([ex ey ez tx ty tz]))}, ortho {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/matrix.cljs", :line 626, :column 7, :end-line 626, :end-column 12, :arglists (quote ([l t r b n f])), :doc "Returns an orthographic projection matrix, in which objects are the same size no\n  matter how far away or nearby they are.\n  This emulates the OpenGL function glOrtho()."}, :name thi.ng.geom.core.matrix/ortho, :variadic false, :file "out/thi/ng/geom/core/matrix.cljs", :end-column 12, :method-params ([l t r b n f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 626, :end-line 626, :max-fixed-arity 6, :fn-var true, :arglists (quote ([l t r b n f])), :doc "Returns an orthographic projection matrix, in which objects are the same size no\n  matter how far away or nearby they are.\n  This emulates the OpenGL function glOrtho()."}, Matrix44 {:num-fields 18, :protocols #{thi.ng.geom.core/PScale cljs.core/IIndexed cljs.core/IEquiv cljs.core/IHash thi.ng.geom.core/PMathOps cljs.core/ICollection thi.ng.geom.core/PTranslate thi.ng.geom.core.matrix/Object thi.ng.common.math.core/PDeltaEquals thi.ng.geom.core/PTransform cljs.core/ICounted thi.ng.geom.core/PTranspose thi.ng.geom.core/PRotate3D cljs.core/ISeq cljs.core/INext thi.ng.geom.core/PVectorTransform cljs.core/ISeqable thi.ng.geom.core/PRotate cljs.core/IMeta thi.ng.geom.core/PDeterminant cljs.core/ISequential cljs.core/IWithMeta thi.ng.geom.core/PInvert}, :name thi.ng.geom.core.matrix/Matrix44, :file "out/thi/ng/geom/core/matrix.cljs", :end-column 18, :type true, :column 10, :line 222, :record false, :end-line 222, :skip-protocol-flag #{cljs.core/IIndexed cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeq cljs.core/INext cljs.core/ISeqable cljs.core/IMeta cljs.core/ISequential cljs.core/IWithMeta}}, perspective {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/matrix.cljs", :line 641, :column 7, :end-line 641, :end-column 18, :arglists (quote ([fovy aspect near far])), :doc "Returns a perspective transform matrix, which makes far away objects appear\n  smaller than nearby objects. The `aspect` argument should be the width\n  divided by the height of your viewport and `fov` is the vertical angle\n  of the field of view in degrees."}, :name thi.ng.geom.core.matrix/perspective, :variadic false, :file "out/thi/ng/geom/core/matrix.cljs", :end-column 18, :method-params ([fovy aspect near far]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 641, :end-line 641, :max-fixed-arity 4, :fn-var true, :arglists (quote ([fovy aspect near far])), :doc "Returns a perspective transform matrix, which makes far away objects appear\n  smaller than nearby objects. The `aspect` argument should be the width\n  divided by the height of your viewport and `fov` is the vertical angle\n  of the field of view in degrees."}, matrix44->matrix33 {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/matrix.cljs", :line 581, :column 7, :end-line 581, :end-column 25, :arglists (quote ([[m00 m01 m02 _ m10 m11 m12 _ m20 m21 m22]]))}, :name thi.ng.geom.core.matrix/matrix44->matrix33, :variadic false, :file "out/thi/ng/geom/core/matrix.cljs", :end-column 25, :method-params ([p__19762]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 581, :end-line 581, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[m00 m01 m02 _ m10 m11 m12 _ m20 m21 m22]]))}, ->Matrix44 {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/matrix.cljs", :line 222, :column 10, :end-line 222, :end-column 18, :protocols #{thi.ng.geom.core/PScale cljs.core/IIndexed cljs.core/IEquiv cljs.core/IHash thi.ng.geom.core/PMathOps cljs.core/ICollection thi.ng.geom.core/PTranslate thi.ng.geom.core.matrix/Object thi.ng.common.math.core/PDeltaEquals thi.ng.geom.core/PTransform cljs.core/ICounted thi.ng.geom.core/PTranspose thi.ng.geom.core/PRotate3D cljs.core/ISeq cljs.core/INext thi.ng.geom.core/PVectorTransform cljs.core/ISeqable thi.ng.geom.core/PRotate cljs.core/IMeta thi.ng.geom.core/PDeterminant cljs.core/ISequential cljs.core/IWithMeta thi.ng.geom.core/PInvert}, :skip-protocol-flag #{cljs.core/IIndexed cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeq cljs.core/INext cljs.core/ISeqable cljs.core/IMeta cljs.core/ISequential cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([m00 m01 m02 m03 m10 m11 m12 m13 m20 m21 m22 m23 m30 m31 m32 m33 _hasheq _meta]))}, :protocols #{thi.ng.geom.core/PScale cljs.core/IIndexed cljs.core/IEquiv cljs.core/IHash thi.ng.geom.core/PMathOps cljs.core/ICollection thi.ng.geom.core/PTranslate thi.ng.geom.core.matrix/Object thi.ng.common.math.core/PDeltaEquals thi.ng.geom.core/PTransform cljs.core/ICounted thi.ng.geom.core/PTranspose thi.ng.geom.core/PRotate3D cljs.core/ISeq cljs.core/INext thi.ng.geom.core/PVectorTransform cljs.core/ISeqable thi.ng.geom.core/PRotate cljs.core/IMeta thi.ng.geom.core/PDeterminant cljs.core/ISequential cljs.core/IWithMeta thi.ng.geom.core/PInvert}, :name thi.ng.geom.core.matrix/->Matrix44, :variadic false, :file "out/thi/ng/geom/core/matrix.cljs", :end-column 18, :method-params ([m00 m01 m02 m03 m10 m11 m12 m13 m20 m21 m22 m23 m30 m31 m32 m33 _hasheq _meta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 222, :end-line 222, :max-fixed-arity 18, :fn-var true, :arglists (quote ([m00 m01 m02 m03 m10 m11 m12 m13 m20 m21 m22 m23 m30 m31 m32 m33 _hasheq _meta])), :skip-protocol-flag #{cljs.core/IIndexed cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeq cljs.core/INext cljs.core/ISeqable cljs.core/IMeta cljs.core/ISequential cljs.core/IWithMeta}}, matrix44->matrix33-rot {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/matrix.cljs", :line 585, :column 7, :end-line 585, :end-column 29, :arglists (quote ([[m00 m01 m02 _ m10 m11 m12 _ m20 m21 m22]]))}, :name thi.ng.geom.core.matrix/matrix44->matrix33-rot, :variadic false, :file "out/thi/ng/geom/core/matrix.cljs", :end-column 29, :method-params ([p__19765]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 585, :end-line 585, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[m00 m01 m02 _ m10 m11 m12 _ m20 m21 m22]]))}, frustum {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/matrix.cljs", :line 601, :column 7, :end-line 601, :end-column 14, :arglists (quote ([l t r b n f])), :doc "Sets up a viewing frustum, shaped like a truncated pyramid with the\n  camera where the tip of the pyramid would be.\n  This emulates the OpenGL function glFrustum()."}, :name thi.ng.geom.core.matrix/frustum, :variadic false, :file "out/thi/ng/geom/core/matrix.cljs", :end-column 14, :method-params ([l t r b n f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 601, :end-line 601, :max-fixed-arity 6, :fn-var true, :arglists (quote ([l t r b n f])), :doc "Sets up a viewing frustum, shaped like a truncated pyramid with the\n  camera where the tip of the pyramid would be.\n  This emulates the OpenGL function glFrustum()."}, matrix44 {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/matrix.cljs", :line 573, :column 7, :end-line 573, :end-column 15, :arglists (quote ([] [[m00 m01 m02 m03 m10 m11 m12 m13 m20 m21 m22 m23 m30 m31 m32 m33]] [m00 m01 m02 m03 m10 m11 m12 m13 m20 m21 m22 m23 m30 m31 m32 m33])), :top-fn {:variadic false, :max-fixed-arity 16, :method-params ([] [[m00 m01 m02 m03 m10 m11 m12 m13 m20 m21 m22 m23 m30 m31 m32 m33]] [m00 m01 m02 m03 m10 m11 m12 m13 m20 m21 m22 m23 m30 m31 m32 m33]), :arglists ([] [[m00 m01 m02 m03 m10 m11 m12 m13 m20 m21 m22 m23 m30 m31 m32 m33]] [m00 m01 m02 m03 m10 m11 m12 m13 m20 m21 m22 m23 m30 m31 m32 m33]), :arglists-meta (nil nil nil)}}, :name thi.ng.geom.core.matrix/matrix44, :variadic false, :file "out/thi/ng/geom/core/matrix.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 16, :method-params ([] [[m00 m01 m02 m03 m10 m11 m12 m13 m20 m21 m22 m23 m30 m31 m32 m33]] [m00 m01 m02 m03 m10 m11 m12 m13 m20 m21 m22 m23 m30 m31 m32 m33]), :arglists ([] [[m00 m01 m02 m03 m10 m11 m12 m13 m20 m21 m22 m23 m30 m31 m32 m33]] [m00 m01 m02 m03 m10 m11 m12 m13 m20 m21 m22 m23 m30 m31 m32 m33]), :arglists-meta (nil nil nil)}, :method-params ([] [[m00 m01 m02 m03 m10 m11 m12 m13 m20 m21 m22 m23 m30 m31 m32 m33]] [m00 m01 m02 m03 m10 m11 m12 m13 m20 m21 m22 m23 m30 m31 m32 m33]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 573, :end-line 573, :max-fixed-arity 16, :fn-var true, :arglists ([] [[m00 m01 m02 m03 m10 m11 m12 m13 m20 m21 m22 m23 m30 m31 m32 m33]] [m00 m01 m02 m03 m10 m11 m12 m13 m20 m21 m22 m23 m30 m31 m32 m33])}, perspective-frustum {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/matrix.cljs", :line 656, :column 7, :end-line 656, :end-column 26, :arglists (quote ([fov aspect near far]))}, :name thi.ng.geom.core.matrix/perspective-frustum, :variadic false, :file "out/thi/ng/geom/core/matrix.cljs", :end-column 26, :method-params ([fov aspect near far]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 656, :end-line 656, :max-fixed-arity 4, :fn-var true, :arglists (quote ([fov aspect near far]))}}, :require-macros {mm thi.ng.macromath.core, thi.ng.macromath.core thi.ng.macromath.core, gmc thi.ng.geom.core.macros.matrix, thi.ng.geom.core.macros.matrix thi.ng.geom.core.macros.matrix}, :cljs.analyzer/constants {:seen #{:bottom :top :size :right :p :left}, :order [:left :right :top :bottom :p :size]}, :doc nil}