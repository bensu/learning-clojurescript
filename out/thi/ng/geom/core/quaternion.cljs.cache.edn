;; Analyzed by ClojureScript 0.0-3291
{:use-macros nil, :excludes #{}, :name thi.ng.geom.core.quaternion, :imports nil, :requires {mat thi.ng.geom.core.matrix, thi.ng.geom.core thi.ng.geom.core, v thi.ng.geom.core.vector, thi.ng.geom.core.vector thi.ng.geom.core.vector, m thi.ng.common.math.core, err thi.ng.common.error, g thi.ng.geom.core, thi.ng.common.math.core thi.ng.common.math.core, thi.ng.geom.core.matrix thi.ng.geom.core.matrix, thi.ng.common.error thi.ng.common.error}, :uses {V3Z thi.ng.geom.core.vector, V3Y thi.ng.geom.core.vector, TWO_PI thi.ng.common.math.core, vec3 thi.ng.geom.core.vector, PI thi.ng.common.math.core, vec2 thi.ng.geom.core.vector, *eps* thi.ng.common.math.core, V3X thi.ng.geom.core.vector}, :defs {swizzle4 {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/quaternion.cljs", :line 525, :column 7, :end-line 525, :end-column 15, :arglists (quote ([_ k default]))}, :name thi.ng.geom.core.quaternion/swizzle4, :variadic false, :file "out/thi/ng/geom/core/quaternion.cljs", :end-column 15, :method-params ([_ k default]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 525, :end-line 525, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ k default]))}, quat-from-euler {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/quaternion.cljs", :line 452, :column 7, :end-line 452, :end-column 22, :arglists (quote ([order alpha beta gamma]))}, :name thi.ng.geom.core.quaternion/quat-from-euler, :variadic false, :file "out/thi/ng/geom/core/quaternion.cljs", :end-column 22, :method-params ([order alpha beta gamma]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 452, :end-line 452, :max-fixed-arity 4, :fn-var true, :arglists (quote ([order alpha beta gamma]))}, quat {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/quaternion.cljs", :line 432, :column 7, :end-line 432, :end-column 11, :arglists (quote ([] [[x y z] w] [[x y z w]] [x y z w])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([] [[x y z] w] [[x y z w]] [x y z w]), :arglists ([] [[x y z] w] [[x y z w]] [x y z w]), :arglists-meta (nil nil nil nil)}}, :name thi.ng.geom.core.quaternion/quat, :variadic false, :file "out/thi/ng/geom/core/quaternion.cljs", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([] [[x y z] w] [[x y z w]] [x y z w]), :arglists ([] [[x y z] w] [[x y z w]] [x y z w]), :arglists-meta (nil nil nil nil)}, :method-params ([] [[x y z] w] [[x y z w]] [x y z w]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 432, :end-line 432, :max-fixed-arity 4, :fn-var true, :arglists ([] [[x y z] w] [[x y z w]] [x y z w])}, alignment-quat {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/quaternion.cljs", :line 508, :column 7, :end-line 508, :end-column 21, :arglists (quote ([from to]))}, :name thi.ng.geom.core.quaternion/alignment-quat, :variadic false, :file "out/thi/ng/geom/core/quaternion.cljs", :end-column 21, :method-params ([from to]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 508, :end-line 508, :max-fixed-arity 2, :fn-var true, :arglists (quote ([from to]))}, lookup4 {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/quaternion.cljs", :line 516, :column 7, :end-line 516, :end-column 14, :arglists (quote ([_ k nf]))}, :name thi.ng.geom.core.quaternion/lookup4, :variadic false, :file "out/thi/ng/geom/core/quaternion.cljs", :end-column 14, :method-params ([_ k nf]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 516, :end-line 516, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ k nf]))}, quat-from-axis-angle {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/quaternion.cljs", :line 438, :column 7, :end-line 438, :end-column 27, :arglists (quote ([axis theta]))}, :name thi.ng.geom.core.quaternion/quat-from-axis-angle, :variadic false, :file "out/thi/ng/geom/core/quaternion.cljs", :end-column 27, :method-params ([axis theta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 438, :end-line 438, :max-fixed-arity 2, :fn-var true, :arglists (quote ([axis theta]))}, swizzle4-assoc {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/quaternion.cljs", :line 567, :column 7, :end-line 567, :end-column 21, :arglists (quote ([_ k v]))}, :name thi.ng.geom.core.quaternion/swizzle4-assoc, :variadic false, :file "out/thi/ng/geom/core/quaternion.cljs", :end-column 21, :method-params ([_ k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 567, :end-line 567, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ k v]))}, Q {:name thi.ng.geom.core.quaternion/Q, :file "out/thi/ng/geom/core/quaternion.cljs", :line 430, :column 1, :end-line 430, :end-column 7, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/quaternion.cljs", :line 430, :column 6, :end-line 430, :end-column 7}}, ->Quat4 {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/quaternion.cljs", :line 18, :column 10, :end-line 18, :end-column 15, :protocols #{thi.ng.geom.core/PScale thi.ng.geom.core/PMagnitude cljs.core/IIndexed cljs.core/IVector cljs.core/IReversible thi.ng.geom.core/PMatrixConvert cljs.core/IEquiv cljs.core/IHash thi.ng.geom.core/PMathOps cljs.core/IFn cljs.core/ICollection thi.ng.geom.core/PConjugate thi.ng.common.math.core/PDeltaEquals thi.ng.geom.core.quaternion/Object thi.ng.geom.core/PInterpolate cljs.core/ICounted thi.ng.geom.core/PRotate3D thi.ng.geom.core/PDotProduct cljs.core/ISeq thi.ng.geom.core/PNormalize cljs.core/INext thi.ng.geom.core/PVectorTransform cljs.core/ISeqable cljs.core/ICloneable cljs.core/IStack cljs.core/IComparable cljs.core/ISequential thi.ng.geom.core/PInvert cljs.core/IAssociative cljs.core/ILookup}, :skip-protocol-flag #{cljs.core/IIndexed cljs.core/IVector cljs.core/IReversible cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/ICounted cljs.core/ISeq cljs.core/INext cljs.core/ISeqable cljs.core/ICloneable cljs.core/IStack cljs.core/IComparable cljs.core/ISequential cljs.core/IAssociative cljs.core/ILookup}, :factory :positional, :arglists (quote ([x y z w _hasheq]))}, :protocols #{thi.ng.geom.core/PScale thi.ng.geom.core/PMagnitude cljs.core/IIndexed cljs.core/IVector cljs.core/IReversible thi.ng.geom.core/PMatrixConvert cljs.core/IEquiv cljs.core/IHash thi.ng.geom.core/PMathOps cljs.core/IFn cljs.core/ICollection thi.ng.geom.core/PConjugate thi.ng.common.math.core/PDeltaEquals thi.ng.geom.core.quaternion/Object thi.ng.geom.core/PInterpolate cljs.core/ICounted thi.ng.geom.core/PRotate3D thi.ng.geom.core/PDotProduct cljs.core/ISeq thi.ng.geom.core/PNormalize cljs.core/INext thi.ng.geom.core/PVectorTransform cljs.core/ISeqable cljs.core/ICloneable cljs.core/IStack cljs.core/IComparable cljs.core/ISequential thi.ng.geom.core/PInvert cljs.core/IAssociative cljs.core/ILookup}, :name thi.ng.geom.core.quaternion/->Quat4, :variadic false, :file "out/thi/ng/geom/core/quaternion.cljs", :end-column 15, :method-params ([x y z w _hasheq]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 18, :end-line 18, :max-fixed-arity 5, :fn-var true, :arglists (quote ([x y z w _hasheq])), :skip-protocol-flag #{cljs.core/IIndexed cljs.core/IVector cljs.core/IReversible cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/ICounted cljs.core/ISeq cljs.core/INext cljs.core/ISeqable cljs.core/ICloneable cljs.core/IStack cljs.core/IComparable cljs.core/ISequential cljs.core/IAssociative cljs.core/ILookup}}, as-axis-angle {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/quaternion.cljs", :line 443, :column 7, :end-line 443, :end-column 20, :arglists (quote ([q]))}, :name thi.ng.geom.core.quaternion/as-axis-angle, :variadic false, :file "out/thi/ng/geom/core/quaternion.cljs", :end-column 20, :method-params ([q]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 443, :end-line 443, :max-fixed-arity 1, :fn-var true, :arglists (quote ([q]))}, swizzle-assoc* {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/quaternion.cljs", :line 556, :column 7, :end-line 556, :end-column 21, :arglists (quote ([_ ctor keymap k v]))}, :name thi.ng.geom.core.quaternion/swizzle-assoc*, :variadic false, :file "out/thi/ng/geom/core/quaternion.cljs", :end-column 21, :method-params ([_ ctor keymap k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 556, :end-line 556, :max-fixed-arity 5, :fn-var true, :arglists (quote ([_ ctor keymap k v]))}, quat-from-matrix {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/out/thi/ng/geom/core/quaternion.cljs", :line 470, :column 7, :end-line 470, :end-column 23, :arglists (quote ([m]))}, :name thi.ng.geom.core.quaternion/quat-from-matrix, :variadic false, :file "out/thi/ng/geom/core/quaternion.cljs", :end-column 23, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 470, :end-line 470, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, Quat4 {:num-fields 5, :protocols #{thi.ng.geom.core/PScale thi.ng.geom.core/PMagnitude cljs.core/IIndexed cljs.core/IVector cljs.core/IReversible thi.ng.geom.core/PMatrixConvert cljs.core/IEquiv cljs.core/IHash thi.ng.geom.core/PMathOps cljs.core/IFn cljs.core/ICollection thi.ng.geom.core/PConjugate thi.ng.common.math.core/PDeltaEquals thi.ng.geom.core.quaternion/Object thi.ng.geom.core/PInterpolate cljs.core/ICounted thi.ng.geom.core/PRotate3D thi.ng.geom.core/PDotProduct cljs.core/ISeq thi.ng.geom.core/PNormalize cljs.core/INext thi.ng.geom.core/PVectorTransform cljs.core/ISeqable cljs.core/ICloneable cljs.core/IStack cljs.core/IComparable cljs.core/ISequential thi.ng.geom.core/PInvert cljs.core/IAssociative cljs.core/ILookup}, :name thi.ng.geom.core.quaternion/Quat4, :file "out/thi/ng/geom/core/quaternion.cljs", :end-column 15, :type true, :column 10, :line 18, :record false, :end-line 18, :skip-protocol-flag #{cljs.core/IIndexed cljs.core/IVector cljs.core/IReversible cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/ICounted cljs.core/ISeq cljs.core/INext cljs.core/ISeqable cljs.core/ICloneable cljs.core/IStack cljs.core/IComparable cljs.core/ISequential cljs.core/IAssociative cljs.core/ILookup}}}, :require-macros {mm thi.ng.macromath.core, thi.ng.macromath.core thi.ng.macromath.core}, :cljs.analyzer/constants {:seen #{:y :w :z :translate :x}, :order [:y :w :z :x :translate]}, :doc nil}