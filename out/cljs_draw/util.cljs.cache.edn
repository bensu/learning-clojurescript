;; Analyzed by ClojureScript 0.0-3291
{:name cljs_draw.util, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses {timeout cljs.core.async, <! cljs.core.async, chan cljs.core.async, put! cljs.core.async}, :requires {events goog.events, goog.events goog.events, cljs.core.async cljs.core.async}, :imports nil, :defs {listen {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/util.cljs", :line 5, :column 7, :end-line 5, :end-column 13, :arglists (quote ([el type] [el type hook])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([el type] [el type hook]), :arglists ([el type] [el type hook]), :arglists-meta (nil nil)}}, :name cljs_draw.util/listen, :variadic false, :file "01-pressure-draw/cljs_draw/util.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([el type] [el type hook]), :arglists ([el type] [el type hook]), :arglists-meta (nil nil)}, :method-params ([el type] [el type hook]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 3, :fn-var true, :arglists ([el type] [el type hook])}, get-from-storage {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/util.cljs", :line 15, :column 7, :end-line 15, :end-column 23, :arglists (quote ([name]))}, :name cljs_draw.util/get-from-storage, :variadic false, :file "01-pressure-draw/cljs_draw/util.cljs", :end-column 23, :method-params ([name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([name]))}}}