;; Analyzed by ClojureScript 0.0-3291
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name cljs_draw.core, :imports nil, :requires {mat thi.ng.geom.core.matrix, driver gamma-driver.drivers.basic, p gamma.program, dom om.dom, goog.color goog.color, thi.ng.geom.core thi.ng.geom.core, gamma-driver.drivers.basic gamma-driver.drivers.basic, clojure.browser.repl clojure.browser.repl, om.dom om.dom, color goog.color, thi.ng.geom.core.vector thi.ng.geom.core.vector, vec thi.ng.geom.core.vector, thi.ng.math.core thi.ng.math.core, cljs.core.async cljs.core.async, gamma.api gamma.api, gamma-driver.api gamma-driver.api, cljs_draw.util cljs_draw.util, gamma-driver.protocols gamma-driver.protocols, om.core om.core, om om.core, g gamma.api, gd gamma-driver.api, geom thi.ng.geom.core, gamma.program gamma.program, dp gamma-driver.protocols, repl clojure.browser.repl, thi.ng.geom.core.matrix thi.ng.geom.core.matrix}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, dropping-buffer cljs.core.async, M44 thi.ng.geom.core.matrix, PI thi.ng.math.core, >! cljs.core.async, listen cljs_draw.util, alts! cljs.core.async, put! cljs.core.async, get-from-storage cljs_draw.util}, :defs {->t9928 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([color-item props owner meta9929])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t9928, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([color-item props owner meta9929]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 221, :max-fixed-arity 4, :fn-var true, :arglists (quote ([color-item props owner meta9929])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, finalize-stroke {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 99, :column 7, :end-line 99, :end-column 22, :arglists (quote ([]))}, :name cljs_draw.core/finalize-stroke, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-perspective-matrix {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 60, :column 7, :end-line 60, :end-column 29, :arglists (quote ([width height]))}, :name cljs_draw.core/get-perspective-matrix, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 29, :method-params ([width height]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 2, :fn-var true, :arglists (quote ([width height]))}, conn {:name cljs_draw.core/conn, :file "01-pressure-draw/cljs_draw/core.cljs", :line 20, :column 1, :end-line 20, :end-column 14, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 20, :column 10, :end-line 20, :end-column 14}}, color-chooser {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 290, :column 7, :end-line 290, :end-column 20, :arglists (quote ([data]))}, :name cljs_draw.core/color-chooser, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 20, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 290, :end-line 290, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, paint-meshes {:name cljs_draw.core/paint-meshes, :file "01-pressure-draw/cljs_draw/core.cljs", :line 28, :column 1, :end-line 28, :end-column 18, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 28, :column 6, :end-line 28, :end-column 18}}, u-p-matrix {:name cljs_draw.core/u-p-matrix, :file "01-pressure-draw/cljs_draw/core.cljs", :line 34, :column 1, :end-line 34, :end-column 16, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 34, :column 6, :end-line 34, :end-column 16}}, u-mv-matrix {:name cljs_draw.core/u-mv-matrix, :file "01-pressure-draw/cljs_draw/core.cljs", :line 37, :column 1, :end-line 37, :end-column 17, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 37, :column 6, :end-line 37, :end-column 17}}, render-loop {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 160, :column 7, :end-line 160, :end-column 18, :arglists (quote ([]))}, :name cljs_draw.core/render-loop, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 160, :end-line 160, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, color-item {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 220, :column 7, :end-line 220, :end-column 17, :arglists (quote ([props owner]))}, :name cljs_draw.core/color-item, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 17, :method-params ([props owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 220, :end-line 220, :max-fixed-arity 2, :fn-var true, :arglists (quote ([props owner]))}, a-position {:name cljs_draw.core/a-position, :file "01-pressure-draw/cljs_draw/core.cljs", :line 43, :column 1, :end-line 43, :end-column 16, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 43, :column 6, :end-line 43, :end-column 16}}, t10019 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t10019, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 337, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t9850 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([color-item props owner meta9851])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t9850, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([color-item props owner meta9851]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 221, :max-fixed-arity 4, :fn-var true, :arglists (quote ([color-item props owner meta9851])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, u-color {:name cljs_draw.core/u-color, :file "01-pressure-draw/cljs_draw/core.cljs", :line 40, :column 1, :end-line 40, :end-column 13, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 40, :column 6, :end-line 40, :end-column 13}}, add-to-stroke {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 103, :column 7, :end-line 103, :end-column 20, :arglists (quote ([point pressure]))}, :name cljs_draw.core/add-to-stroke, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 20, :method-params ([point pressure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 2, :fn-var true, :arglists (quote ([point pressure]))}, t9928 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t9928, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 221, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t10113 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t10113, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 337, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, init {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 323, :column 7, :end-line 323, :end-column 11, :arglists (quote ([node]))}, :name cljs_draw.core/init, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 11, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 323, :end-line 323, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, t9844 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t9844, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 192, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t9847 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t9847, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 192, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, renderable {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 54, :column 7, :end-line 54, :end-column 17, :arglists (quote ([p mv color vertices]))}, :name cljs_draw.core/renderable, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 17, :method-params ([p mv color vertices]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 4, :fn-var true, :arglists (quote ([p mv color vertices]))}, ->t10113 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([app data owner meta10114])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t10113, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([app data owner meta10114]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 337, :max-fixed-arity 4, :fn-var true, :arglists (quote ([app data owner meta10114])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, debug {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 172, :column 7, :end-line 172, :end-column 12, :arglists (quote ([x]))}, :name cljs_draw.core/debug, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 172, :end-line 172, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, cursor {:name cljs_draw.core/cursor, :file "01-pressure-draw/cljs_draw/core.cljs", :line 30, :column 1, :end-line 30, :end-column 12, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 30, :column 6, :end-line 30, :end-column 12}}, ->t9847 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([color-input data owner meta9848])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t9847, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([color-input data owner meta9848]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 192, :max-fixed-arity 4, :fn-var true, :arglists (quote ([color-input data owner meta9848])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, renderer {:name cljs_draw.core/renderer, :file "01-pressure-draw/cljs_draw/core.cljs", :line 32, :column 1, :end-line 32, :end-column 14, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 32, :column 6, :end-line 32, :end-column 14}}, t9850 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t9850, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 221, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t9844 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([color-input data owner meta9845])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t9844, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([color-input data owner meta9845]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 192, :max-fixed-arity 4, :fn-var true, :arglists (quote ([color-input data owner meta9845])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, signal-after-inactivity {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 179, :column 7, :end-line 179, :end-column 30, :arglists (quote ([ms]))}, :name cljs_draw.core/signal-after-inactivity, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 30, :method-params ([ms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 179, :end-line 179, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ms]))}, app-state {:name cljs_draw.core/app-state, :file "01-pressure-draw/cljs_draw/core.cljs", :line 23, :column 1, :end-line 23, :end-column 19, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 23, :column 10, :end-line 23, :end-column 19}}, set-cursor {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 96, :column 7, :end-line 96, :end-column 17, :arglists (quote ([point]))}, :name cljs_draw.core/set-cursor, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 17, :method-params ([point]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 1, :fn-var true, :arglists (quote ([point]))}, render {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 149, :column 7, :end-line 149, :end-column 13, :arglists (quote ([]))}, :name cljs_draw.core/render, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 149, :end-line 149, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, current-mesh {:name cljs_draw.core/current-mesh, :file "01-pressure-draw/cljs_draw/core.cljs", :line 29, :column 1, :end-line 29, :end-column 18, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 29, :column 6, :end-line 29, :end-column 18}}, program-source {:name cljs_draw.core/program-source, :file "01-pressure-draw/cljs_draw/core.cljs", :line 46, :column 1, :end-line 46, :end-column 20, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 46, :column 6, :end-line 46, :end-column 20}}, color-input {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 191, :column 7, :end-line 191, :end-column 18, :arglists (quote ([data owner]))}, :name cljs_draw.core/color-input, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 18, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 191, :end-line 191, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, app {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 336, :column 7, :end-line 336, :end-column 10, :arglists (quote ([data owner]))}, :name cljs_draw.core/app, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 10, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 336, :end-line 336, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, ->t10019 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([app data owner meta10020])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t10019, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([app data owner meta10020]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 337, :max-fixed-arity 4, :fn-var true, :arglists (quote ([app data owner meta10020])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, chan-handler {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 176, :column 7, :end-line 176, :end-column 19, :arglists (quote ([chan]))}, :name cljs_draw.core/chan-handler, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 19, :method-params ([chan]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 1, :fn-var true, :arglists (quote ([chan]))}, render-mesh {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 141, :column 7, :end-line 141, :end-column 18, :arglists (quote ([mesh driver program pers mv]))}, :name cljs_draw.core/render-mesh, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 18, :method-params ([mesh driver program pers mv]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 5, :fn-var true, :arglists (quote ([mesh driver program pers mv]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, om om.core, om.core om.core, dom om.dom, om.dom om.dom, g gamma.api, gamma.api gamma.api}, :cljs.analyzer/constants {:seen #{:mouseup :hide-controls :fragment-shader :selected :react-key :color :onSelect :pers :else :vec3 :float :precision :listening-for-color :mouseout :recur :colors :output :vertex-shader :pending-color :vec2 :mediump :count :draw-mode :mat4 :gl :current-color :input :target :expanded :driver :mousedown :program :triangles :onRemove :data}, :order [:colors :current-color :listening-for-color :mat4 :vec3 :vec2 :vertex-shader :fragment-shader :precision :float :mediump :data :count :draw-mode :triangles :gl :driver :program :pers :recur :else :input :output :pending-color :mousedown :mouseup :mouseout :hide-controls :expanded :onSelect :color :onRemove :selected :react-key :target]}, :doc nil}