;; Analyzed by ClojureScript 0.0-3291
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name cljs_draw.core, :imports nil, :requires {mat thi.ng.geom.core.matrix, driver gamma-driver.drivers.basic, math thi.ng.math.core, p gamma.program, dom om.dom, goog.color goog.color, thi.ng.geom.core thi.ng.geom.core, gamma-driver.drivers.basic gamma-driver.drivers.basic, clojure.browser.repl clojure.browser.repl, v thi.ng.geom.core.vector, om.dom om.dom, color goog.color, thi.ng.geom.core.vector thi.ng.geom.core.vector, thi.ng.math.core thi.ng.math.core, cljs.core.async cljs.core.async, gamma.api gamma.api, gamma-driver.api gamma-driver.api, cljs_draw.util cljs_draw.util, gamma-driver.protocols gamma-driver.protocols, om.core om.core, om om.core, g gamma.api, gd gamma-driver.api, geom thi.ng.geom.core, gamma.program gamma.program, dp gamma-driver.protocols, repl clojure.browser.repl, thi.ng.geom.core.matrix thi.ng.geom.core.matrix}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, dropping-buffer cljs.core.async, M44 thi.ng.geom.core.matrix, PI thi.ng.math.core, >! cljs.core.async, listen cljs_draw.util, alts! cljs.core.async, put! cljs.core.async, get-from-storage cljs_draw.util}, :defs {shader-lerp {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 57, :column 7, :end-line 57, :end-column 18, :arglists (quote ([a b s]))}, :name cljs_draw.core/shader-lerp, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 18, :method-params ([a b s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 3, :fn-var true, :arglists (quote ([a b s]))}, x {:name cljs_draw.core/x, :file "01-pressure-draw/cljs_draw/core.cljs", :line 173, :column 1, :end-line 173, :end-column 7, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 173, :column 6, :end-line 173, :end-column 7}}, vec-equals {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 185, :column 7, :end-line 185, :end-column 17, :arglists (quote ([v1 v2]))}, :name cljs_draw.core/vec-equals, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 17, :method-params ([v1 v2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v1 v2]))}, t15149 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t15149, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 287, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t15230 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([color-item props owner meta15231])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t15230, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([color-item props owner meta15231]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 316, :max-fixed-arity 4, :fn-var true, :arglists (quote ([color-item props owner meta15231])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t15152 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t15152, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 316, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t15325 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([app data owner meta15326])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t15325, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([app data owner meta15326]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 441, :max-fixed-arity 4, :fn-var true, :arglists (quote ([app data owner meta15326])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, angle-of-vectors {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 189, :column 7, :end-line 189, :end-column 23, :arglists (quote ([v1 v2]))}, :name cljs_draw.core/angle-of-vectors, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 23, :method-params ([v1 v2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 189, :end-line 189, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v1 v2]))}, finalize-stroke {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 138, :column 7, :end-line 138, :end-column 22, :arglists (quote ([]))}, :name cljs_draw.core/finalize-stroke, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, load-state {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 121, :column 7, :end-line 121, :end-column 17, :arglists (quote ([]))}, :name cljs_draw.core/load-state, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-perspective-matrix {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 113, :column 7, :end-line 113, :end-column 29, :arglists (quote ([width height]))}, :name cljs_draw.core/get-perspective-matrix, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 29, :method-params ([width height]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 113, :end-line 113, :max-fixed-arity 2, :fn-var true, :arglists (quote ([width height]))}, conn {:name cljs_draw.core/conn, :file "01-pressure-draw/cljs_draw/core.cljs", :line 20, :column 1, :end-line 20, :end-column 14, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 20, :column 10, :end-line 20, :end-column 14}}, t15146 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t15146, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 287, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, dimen {:name cljs_draw.core/dimen, :file "01-pressure-draw/cljs_draw/core.cljs", :line 28, :column 1, :end-line 28, :end-column 11, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 28, :column 6, :end-line 28, :end-column 11}}, color-chooser {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 385, :column 7, :end-line 385, :end-column 20, :arglists (quote ([data]))}, :name cljs_draw.core/color-chooser, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 20, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 385, :end-line 385, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, paint-meshes {:name cljs_draw.core/paint-meshes, :file "01-pressure-draw/cljs_draw/core.cljs", :line 30, :column 1, :end-line 30, :end-column 18, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 30, :column 6, :end-line 30, :end-column 18}}, u-p-matrix {:name cljs_draw.core/u-p-matrix, :file "01-pressure-draw/cljs_draw/core.cljs", :line 35, :column 1, :end-line 35, :end-column 16, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 35, :column 6, :end-line 35, :end-column 16}}, ->LinearStroke {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 152, :column 10, :end-line 152, :end-column 22, :protocols #{cljs_draw.core/IRenderable}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([color brush vertices trackings num-vertices]))}, :protocols #{cljs_draw.core/IRenderable}, :name cljs_draw.core/->LinearStroke, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 22, :method-params ([color brush vertices trackings num-vertices]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 152, :end-line 152, :max-fixed-arity 5, :fn-var true, :arglists (quote ([color brush vertices trackings num-vertices])), :skip-protocol-flag nil}, u-mv-matrix {:name cljs_draw.core/u-mv-matrix, :file "01-pressure-draw/cljs_draw/core.cljs", :line 38, :column 1, :end-line 38, :end-column 17, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 38, :column 6, :end-line 38, :end-column 17}}, render-loop {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 249, :column 7, :end-line 249, :end-column 18, :arglists (quote ([]))}, :name cljs_draw.core/render-loop, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 249, :end-line 249, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, IRenderable {:meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 149, :column 14, :end-line 149, :end-column 25, :doc nil, :protocol-symbol true, :protocol-info {:methods {add-vertex [[this x y tracking]]}}}, :protocol-symbol true, :name cljs_draw.core/IRenderable, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 25, :column 1, :line 149, :protocol-info {:methods {add-vertex [[this x y tracking]]}}, :info nil, :end-line 149, :impls #{cljs_draw.core/LinearStroke}, :doc nil}, a-value {:name cljs_draw.core/a-value, :file "01-pressure-draw/cljs_draw/core.cljs", :line 44, :column 1, :end-line 44, :end-column 13, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 44, :column 6, :end-line 44, :end-column 13}}, t15230 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t15230, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 316, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, make-linear-stroke {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 169, :column 7, :end-line 169, :end-column 25, :arglists (quote ([color brush]))}, :name cljs_draw.core/make-linear-stroke, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 25, :method-params ([color brush]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 2, :fn-var true, :arglists (quote ([color brush]))}, color-item {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 315, :column 7, :end-line 315, :end-column 17, :arglists (quote ([props owner]))}, :name cljs_draw.core/color-item, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 17, :method-params ([props owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 315, :end-line 315, :max-fixed-arity 2, :fn-var true, :arglists (quote ([props owner]))}, a-position {:name cljs_draw.core/a-position, :file "01-pressure-draw/cljs_draw/core.cljs", :line 47, :column 1, :end-line 47, :end-column 16, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 47, :column 6, :end-line 47, :end-column 16}}, ->t15146 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([color-input data owner meta15147])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t15146, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([color-input data owner meta15147]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 287, :max-fixed-arity 4, :fn-var true, :arglists (quote ([color-input data owner meta15147])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, u-color {:name cljs_draw.core/u-color, :file "01-pressure-draw/cljs_draw/core.cljs", :line 41, :column 1, :end-line 41, :end-column 13, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 41, :column 6, :end-line 41, :end-column 13}}, add-to-stroke {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 194, :column 7, :end-line 194, :end-column 20, :arglists (quote ([point pressure]))}, :name cljs_draw.core/add-to-stroke, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 20, :method-params ([point pressure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 194, :end-line 194, :max-fixed-arity 2, :fn-var true, :arglists (quote ([point pressure]))}, add-brush {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 68, :column 7, :end-line 68, :end-column 16, :arglists (quote ([name brush]))}, :name cljs_draw.core/add-brush, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 16, :method-params ([name brush]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 2, :fn-var true, :arglists (quote ([name brush]))}, t15325 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t15325, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 441, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, stroke-history {:name cljs_draw.core/stroke-history, :file "01-pressure-draw/cljs_draw/core.cljs", :line 32, :column 1, :end-line 32, :end-column 20, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 32, :column 6, :end-line 32, :end-column 20}}, init {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 418, :column 7, :end-line 418, :end-column 11, :arglists (quote ([node]))}, :name cljs_draw.core/init, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 11, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 418, :end-line 418, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, ->t15152 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([color-item props owner meta15153])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t15152, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([color-item props owner meta15153]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 316, :max-fixed-arity 4, :fn-var true, :arglists (quote ([color-item props owner meta15153])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, add-vertex {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 150, :column 4, :end-line 150, :end-column 14, :protocol cljs_draw.core/IRenderable, :doc nil, :arglists (quote ([this x y tracking]))}, :protocol cljs_draw.core/IRenderable, :name cljs_draw.core/add-vertex, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 14, :method-params ([this x y tracking]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 149, :end-line 150, :max-fixed-arity 4, :fn-var true, :arglists (quote ([this x y tracking])), :doc nil}, ->t15491 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([app data owner meta15492])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t15491, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([app data owner meta15492]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 441, :max-fixed-arity 4, :fn-var true, :arglists (quote ([app data owner meta15492])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, current-brush {:name cljs_draw.core/current-brush, :file "01-pressure-draw/cljs_draw/core.cljs", :line 60, :column 1, :end-line 60, :end-column 19, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 60, :column 6, :end-line 60, :end-column 19}}, renderable {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 106, :column 7, :end-line 106, :end-column 17, :arglists (quote ([p mv color vertices values vertex-count]))}, :name cljs_draw.core/renderable, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 17, :method-params ([p mv color vertices values vertex-count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 106, :end-line 106, :max-fixed-arity 6, :fn-var true, :arglists (quote ([p mv color vertices values vertex-count]))}, debug {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 267, :column 7, :end-line 267, :end-column 12, :arglists (quote ([x]))}, :name cljs_draw.core/debug, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 267, :end-line 267, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, LinearStroke {:num-fields 5, :protocols #{cljs_draw.core/IRenderable}, :name cljs_draw.core/LinearStroke, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 22, :type true, :column 10, :line 152, :record false, :end-line 152, :skip-protocol-flag nil}, boundary {:name cljs_draw.core/boundary, :file "01-pressure-draw/cljs_draw/core.cljs", :line 29, :column 1, :end-line 29, :end-column 14, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 29, :column 6, :end-line 29, :end-column 14}}, t15491 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t15491, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 441, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, renderer {:name cljs_draw.core/renderer, :file "01-pressure-draw/cljs_draw/core.cljs", :line 33, :column 1, :end-line 33, :end-column 14, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 33, :column 6, :end-line 33, :end-column 14}}, brushes {:name cljs_draw.core/brushes, :file "01-pressure-draw/cljs_draw/core.cljs", :line 67, :column 1, :end-line 67, :end-column 13, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 67, :column 6, :end-line 67, :end-column 13}}, shader-rand {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 53, :column 7, :end-line 53, :end-column 18, :arglists (quote ([v]))}, :name cljs_draw.core/shader-rand, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 18, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, clear-canvas {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 131, :column 7, :end-line 131, :end-column 19, :arglists (quote ([]))}, :name cljs_draw.core/clear-canvas, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-face {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 180, :column 7, :end-line 180, :end-column 15, :arglists (quote ([mesh p1 p2 p3 v1 v2 v3]))}, :name cljs_draw.core/add-face, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 15, :method-params ([mesh p1 p2 p3 v1 v2 v3]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 180, :end-line 180, :max-fixed-arity 7, :fn-var true, :arglists (quote ([mesh p1 p2 p3 v1 v2 v3]))}, ->t15149 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([color-input data owner meta15150])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t15149, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([color-input data owner meta15150]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 287, :max-fixed-arity 4, :fn-var true, :arglists (quote ([color-input data owner meta15150])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, signal-after-inactivity {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 274, :column 7, :end-line 274, :end-column 30, :arglists (quote ([ms]))}, :name cljs_draw.core/signal-after-inactivity, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 30, :method-params ([ms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 274, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ms]))}, app-state {:name cljs_draw.core/app-state, :file "01-pressure-draw/cljs_draw/core.cljs", :line 23, :column 1, :end-line 23, :end-column 19, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 23, :column 10, :end-line 23, :end-column 19}}, undo {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 253, :column 7, :end-line 253, :end-column 11, :arglists (quote ([]))}, :name cljs_draw.core/undo, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 253, :end-line 253, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, start-stroke {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 142, :column 7, :end-line 142, :end-column 19, :arglists (quote ([point]))}, :name cljs_draw.core/start-stroke, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 19, :method-params ([point]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 142, :end-line 142, :max-fixed-arity 1, :fn-var true, :arglists (quote ([point]))}, render {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 237, :column 7, :end-line 237, :end-column 13, :arglists (quote ([]))}, :name cljs_draw.core/render, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 237, :end-line 237, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, current-mesh {:name cljs_draw.core/current-mesh, :file "01-pressure-draw/cljs_draw/core.cljs", :line 31, :column 1, :end-line 31, :end-column 18, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 31, :column 6, :end-line 31, :end-column 18}}, color-input {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 286, :column 7, :end-line 286, :end-column 18, :arglists (quote ([data owner]))}, :name cljs_draw.core/color-input, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 18, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 286, :end-line 286, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, default-vertex-shader {:name cljs_draw.core/default-vertex-shader, :file "01-pressure-draw/cljs_draw/core.cljs", :line 61, :column 1, :end-line 61, :end-column 27, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 61, :column 6, :end-line 61, :end-column 27}}, app {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 440, :column 7, :end-line 440, :end-column 10, :arglists (quote ([data owner]))}, :name cljs_draw.core/app, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 10, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 440, :end-line 440, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, save-state {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 116, :column 7, :end-line 116, :end-column 17, :arglists (quote ([]))}, :name cljs_draw.core/save-state, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, chan-handler {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 271, :column 7, :end-line 271, :end-column 19, :arglists (quote ([chan]))}, :name cljs_draw.core/chan-handler, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 19, :method-params ([chan]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 271, :end-line 271, :max-fixed-arity 1, :fn-var true, :arglists (quote ([chan]))}, render-mesh {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 227, :column 7, :end-line 227, :end-column 18, :arglists (quote ([mesh driver program pers mv]))}, :name cljs_draw.core/render-mesh, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 18, :method-params ([mesh driver program pers mv]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 227, :end-line 227, :max-fixed-arity 5, :fn-var true, :arglists (quote ([mesh driver program pers mv]))}, v-value {:name cljs_draw.core/v-value, :file "01-pressure-draw/cljs_draw/core.cljs", :line 50, :column 1, :end-line 50, :end-column 13, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 50, :column 6, :end-line 50, :end-column 13}}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, om om.core, om.core om.core, dom om.dom, om.dom om.dom, g gamma.api, gamma.api gamma.api}, :cljs.analyzer/constants {:seen #{:mouseup :hide-controls :transparent :fragment-shader :selected :react-key :color :onSelect :pers :solid :else :vec3 :float :precision :listening-for-color :mouseout :recur :colors :output :vertex-shader :pending-color :vec2 :mediump :blue :count :draw-mode :mat4 :gl :spray :current-color :input :target :expanded :driver :mousedown :programs :keywordize-keys :triangles :onRemove :data}, :order [:colors :current-color :listening-for-color :mat4 :vec3 :float :vec2 :mediump :transparent :precision :programs :driver :solid :vertex-shader :fragment-shader :spray :data :count :keywordize-keys :recur :else :blue :draw-mode :triangles :gl :pers :input :output :pending-color :mousedown :mouseup :mouseout :hide-controls :expanded :onSelect :color :onRemove :selected :react-key :target]}, :doc nil}