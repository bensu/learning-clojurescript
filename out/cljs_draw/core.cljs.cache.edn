;; Analyzed by ClojureScript 0.0-3126
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name cljs_draw.core, :imports nil, :requires {dom om.dom, om.dom om.dom, om om.core, om.core om.core, cljs_draw.util cljs_draw.util, cljs.core.async cljs.core.async, clojure.browser.repl clojure.browser.repl, repl clojure.browser.repl}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, listen cljs_draw.util, put! cljs.core.async}, :defs {ctx {:meta {:end-column 9, :end-line 85, :column 6, :line 85, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :file "01-pressure-draw/cljs_draw/core.cljs", :line 85, :column 1, :end-line 85, :end-column 9, :test true, :name cljs_draw.core/ctx}, finalize-stroke {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 22, :end-line 26, :column 7, :line 26, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/finalize-stroke, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 0}), :line 26, :end-line 26, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, t9082 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t9082, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 154, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, color-chooser {:protocol-inline nil, :meta {:arglists (quote ([data])), :end-column 20, :end-line 126, :column 7, :line 126, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/color-chooser, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 20, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 126, :end-line 126, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data])), :test true}, render-loop {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 18, :end-line 86, :column 7, :line 86, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/render-loop, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 86, :end-line 86, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, moved {:meta {:end-column 11, :end-line 24, :column 6, :line 24, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :file "01-pressure-draw/cljs_draw/core.cljs", :line 24, :column 1, :end-line 24, :end-column 11, :test true, :name cljs_draw.core/moved}, ->t9076 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner data color-input meta9077])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t9076, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([owner data color-input meta9077]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag cljs_draw.core/t9076, :variadic false, :max-fixed-arity 4}), :line 97, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner data color-input meta9077])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, ->t9105 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner data app meta9106])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t9105, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([owner data app meta9106]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag cljs_draw.core/t9105, :variadic false, :max-fixed-arity 4}), :line 154, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner data app meta9106])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, t9079 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t9079, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 97, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t9105 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t9105, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 154, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t9082 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner data app meta9083])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t9082, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([owner data app meta9083]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag cljs_draw.core/t9082, :variadic false, :max-fixed-arity 4}), :line 154, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner data app meta9083])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, lines {:meta {:end-column 11, :end-line 23, :column 6, :line 23, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :file "01-pressure-draw/cljs_draw/core.cljs", :line 23, :column 1, :end-line 23, :end-column 11, :test true, :name cljs_draw.core/lines}, debug {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 12, :end-line 92, :column 7, :line 92, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/debug, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 1}), :line 92, :end-line 92, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, ->t9079 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner data color-input meta9080])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t9079, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([owner data color-input meta9080]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag cljs_draw.core/t9079, :variadic false, :max-fixed-arity 4}), :line 97, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner data color-input meta9080])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, app-state {:meta {:end-column 19, :end-line 12, :column 10, :line 12, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :file "01-pressure-draw/cljs_draw/core.cljs", :line 12, :column 1, :end-line 12, :end-column 19, :test true, :name cljs_draw.core/app-state}, render {:protocol-inline nil, :meta {:arglists (quote ([ctx])), :end-column 13, :end-line 67, :column 7, :line 67, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/render, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 13, :method-params ([ctx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 1}), :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ctx])), :test true}, color-input {:protocol-inline nil, :meta {:arglists (quote ([data owner])), :end-column 18, :end-line 96, :column 7, :line 96, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/color-input, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 18, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs_draw.core/t9079, :variadic false, :max-fixed-arity 2}), :line 96, :end-line 96, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner])), :test true}, app {:protocol-inline nil, :meta {:arglists (quote ([data owner])), :end-column 10, :end-line 153, :column 7, :line 153, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/app, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 10, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs_draw.core/t9105, :variadic false, :max-fixed-arity 2}), :line 153, :end-line 153, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner])), :test true}, set-canvas-sizes! {:protocol-inline nil, :meta {:arglists (quote ([el canvases])), :end-column 24, :end-line 17, :column 7, :line 17, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/set-canvas-sizes!, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 24, :method-params ([el canvases]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 2}), :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([el canvases])), :test true}, vec2-length {:protocol-inline nil, :meta {:arglists (quote ([x y])), :end-column 18, :end-line 64, :column 7, :line 64, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/vec2-length, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 18, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 2}), :line 64, :end-line 64, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y])), :test true}, t9076 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t9076, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 97, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {dom om.dom, om.dom om.dom, om om.core, om.core om.core, cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:order [:colors :current-color :listening-for-color :recur :else :x :y :pressure :color :pending-color :target], :seen #{:y :pressure :color :else :listening-for-color :recur :colors :pending-color :current-color :x :target}}, :doc nil}