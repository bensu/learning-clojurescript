;; Analyzed by ClojureScript 0.0-3126
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name cljs_draw.core, :imports nil, :requires {dom om.dom, om.dom om.dom, om om.core, om.core om.core, cljs_draw.util cljs_draw.util, cljs.core.async cljs.core.async, clojure.browser.repl clojure.browser.repl, repl clojure.browser.repl}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, dropping-buffer cljs.core.async, >! cljs.core.async, listen cljs_draw.util, alts! cljs.core.async, put! cljs.core.async, get-from-storage cljs_draw.util}, :defs {t62594 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t62594, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 144, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, recent-dimen {:meta {:end-column 18, :end-line 25, :column 6, :line 25, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :file "01-pressure-draw/cljs_draw/core.cljs", :line 25, :column 1, :end-line 25, :end-column 18, :test true, :name cljs_draw.core/recent-dimen}, reset-canvas {:protocol-inline nil, :meta {:arglists (quote ([ctx dimen])), :end-column 19, :end-line 86, :column 7, :line 86, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/reset-canvas, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 19, :method-params ([ctx dimen]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 2}), :line 86, :end-line 86, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ctx dimen])), :test true}, baked-cvs {:meta {:end-column 15, :end-line 21, :column 6, :line 21, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :file "01-pressure-draw/cljs_draw/core.cljs", :line 21, :column 1, :end-line 21, :end-column 15, :test true, :name cljs_draw.core/baked-cvs}, save-image {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 17, :end-line 27, :column 7, :line 27, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/save-image, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 27, :end-line 27, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, baked-dimen {:meta {:end-column 17, :end-line 23, :column 6, :line 23, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :file "01-pressure-draw/cljs_draw/core.cljs", :line 23, :column 1, :end-line 23, :end-column 17, :test true, :name cljs_draw.core/baked-dimen}, finalize-stroke {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 22, :end-line 65, :column 7, :line 65, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/finalize-stroke, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 0}), :line 65, :end-line 65, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, t62678 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t62678, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 173, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, load-state {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 17, :end-line 47, :column 7, :line 47, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/load-state, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core.async.impl.channels/ManyToManyChannel, :variadic false, :max-fixed-arity 0}), :line 47, :end-line 47, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, conn {:meta {:end-column 14, :end-line 10, :column 10, :line 10, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :file "01-pressure-draw/cljs_draw/core.cljs", :line 10, :column 1, :end-line 10, :end-column 14, :test true, :name cljs_draw.core/conn}, color-chooser {:protocol-inline nil, :meta {:arglists (quote ([data])), :end-column 20, :end-line 242, :column 7, :line 242, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/color-chooser, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 20, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 242, :end-line 242, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data])), :test true}, load-image {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 17, :end-line 32, :column 7, :line 32, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/load-image, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core.async.impl.channels/ManyToManyChannel, :variadic false, :max-fixed-arity 0}), :line 32, :end-line 32, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, render-loop {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 18, :end-line 112, :column 7, :line 112, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/render-loop, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 112, :end-line 112, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, color-item {:protocol-inline nil, :meta {:arglists (quote ([props owner])), :end-column 17, :end-line 172, :column 7, :line 172, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/color-item, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 17, :method-params ([props owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs_draw.core/t62678, :variadic false, :max-fixed-arity 2}), :line 172, :end-line 172, :max-fixed-arity 2, :fn-var true, :arglists (quote ([props owner])), :test true}, ->t62600 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner props color-item meta62601])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t62600, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([owner props color-item meta62601]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag cljs_draw.core/t62600, :variadic false, :max-fixed-arity 4}), :line 173, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner props color-item meta62601])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, t62600 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t62600, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 173, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, render-line {:protocol-inline nil, :meta {:arglists (quote ([ctx line])), :end-column 18, :end-line 71, :column 7, :line 71, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/render-line, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 18, :method-params ([ctx line]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 2}), :line 71, :end-line 71, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ctx line])), :test true}, ->t62678 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner props color-item meta62679])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t62678, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([owner props color-item meta62679]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag cljs_draw.core/t62678, :variadic false, :max-fixed-arity 4}), :line 173, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner props color-item meta62679])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, lines {:meta {:end-column 11, :end-line 18, :column 6, :line 18, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :file "01-pressure-draw/cljs_draw/core.cljs", :line 18, :column 1, :end-line 18, :end-column 11, :test true, :name cljs_draw.core/lines}, debug {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 12, :end-line 124, :column 7, :line 124, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/debug, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 1}), :line 124, :end-line 124, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, cursor {:meta {:end-column 12, :end-line 19, :column 6, :line 19, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :file "01-pressure-draw/cljs_draw/core.cljs", :line 19, :column 1, :end-line 19, :end-column 12, :test true, :name cljs_draw.core/cursor}, ->t62594 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner data color-input meta62595])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t62594, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([owner data color-input meta62595]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag cljs_draw.core/t62594, :variadic false, :max-fixed-arity 4}), :line 144, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner data color-input meta62595])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, ->t62769 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner data app meta62770])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t62769, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([owner data app meta62770]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag cljs_draw.core/t62769, :variadic false, :max-fixed-arity 4}), :line 276, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner data app meta62770])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, ->t62597 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner data color-input meta62598])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t62597, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([owner data color-input meta62598]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag cljs_draw.core/t62597, :variadic false, :max-fixed-arity 4}), :line 144, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner data color-input meta62598])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, ->t62910 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner data app meta62911])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t62910, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([owner data app meta62911]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag cljs_draw.core/t62910, :variadic false, :max-fixed-arity 4}), :line 276, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner data app meta62911])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, baked-ctx {:meta {:end-column 15, :end-line 22, :column 6, :line 22, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :file "01-pressure-draw/cljs_draw/core.cljs", :line 22, :column 1, :end-line 22, :end-column 15, :test true, :name cljs_draw.core/baked-ctx}, clear-canvas {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 19, :end-line 56, :column 7, :line 56, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/clear-canvas, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil clj-nil}, :variadic false, :max-fixed-arity 0}), :line 56, :end-line 56, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, t62910 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t62910, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 276, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, signal-after-inactivity {:protocol-inline nil, :meta {:arglists (quote ([ms])), :end-column 30, :end-line 131, :column 7, :line 131, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/signal-after-inactivity, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 30, :method-params ([ms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IMap, :variadic false, :max-fixed-arity 1}), :line 131, :end-line 131, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ms])), :test true}, app-state {:meta {:end-column 19, :end-line 13, :column 10, :line 13, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :file "01-pressure-draw/cljs_draw/core.cljs", :line 13, :column 1, :end-line 13, :end-column 19, :test true, :name cljs_draw.core/app-state}, set-cursor {:protocol-inline nil, :meta {:arglists (quote ([x y])), :end-column 17, :end-line 62, :column 7, :line 62, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/set-cursor, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 17, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 2}), :line 62, :end-line 62, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y])), :test true}, undo {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 11, :end-line 116, :column 7, :line 116, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/undo, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 0}), :line 116, :end-line 116, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, render {:protocol-inline nil, :meta {:arglists (quote ([baked-ctx recent-ctx])), :end-column 13, :end-line 89, :column 7, :line 89, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/render, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 13, :method-params ([baked-ctx recent-ctx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 2}), :line 89, :end-line 89, :max-fixed-arity 2, :fn-var true, :arglists (quote ([baked-ctx recent-ctx])), :test true}, color-input {:protocol-inline nil, :meta {:arglists (quote ([data owner])), :end-column 18, :end-line 143, :column 7, :line 143, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/color-input, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 18, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs_draw.core/t62597, :variadic false, :max-fixed-arity 2}), :line 143, :end-line 143, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner])), :test true}, app {:protocol-inline nil, :meta {:arglists (quote ([data owner])), :end-column 10, :end-line 275, :column 7, :line 275, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/app, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 10, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs_draw.core/t62910, :variadic false, :max-fixed-arity 2}), :line 275, :end-line 275, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner])), :test true}, save-state {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 17, :end-line 42, :column 7, :line 42, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/save-state, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 42, :end-line 42, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, recent-ctx {:meta {:end-column 16, :end-line 24, :column 6, :line 24, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :file "01-pressure-draw/cljs_draw/core.cljs", :line 24, :column 1, :end-line 24, :end-column 16, :test true, :name cljs_draw.core/recent-ctx}, chan-handler {:protocol-inline nil, :meta {:arglists (quote ([chan])), :end-column 19, :end-line 128, :column 7, :line 128, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/chan-handler, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 19, :method-params ([chan]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag function, :variadic false, :max-fixed-arity 1}), :line 128, :end-line 128, :max-fixed-arity 1, :fn-var true, :arglists (quote ([chan])), :test true}, t62597 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t62597, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 144, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t62769 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t62769, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 276, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, vec2-length {:protocol-inline nil, :meta {:arglists (quote ([x y])), :end-column 18, :end-line 68, :column 7, :line 68, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/vec2-length, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 18, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 2}), :line 68, :end-line 68, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y])), :test true}}, :require-macros {dom om.dom, om.dom om.dom, om om.core, om.core om.core, cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:order [:colors :current-color :listening-for-color :recur :else :keywordize-keys :pressure :color :x :y :input :output :pending-color :mouseout :mousedown :mouseup :expanded :onRemove :selected :hide-controls :onSelect :react-key :target], :seen #{:y :mouseup :hide-controls :pressure :selected :react-key :color :onSelect :else :listening-for-color :mouseout :recur :colors :output :pending-color :current-color :x :input :target :expanded :mousedown :keywordize-keys :onRemove}}, :doc nil}