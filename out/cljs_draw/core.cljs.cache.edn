;; Analyzed by ClojureScript 0.0-3126
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name cljs_draw.core, :imports nil, :requires {dom om.dom, om.dom om.dom, om om.core, om.core om.core, cljs_draw.util cljs_draw.util, cljs.core.async cljs.core.async, clojure.browser.repl clojure.browser.repl, repl clojure.browser.repl}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, listen cljs_draw.util, put! cljs.core.async}, :defs {color-chooser {:protocol-inline nil, :meta {:arglists (quote ([data])), :end-column 20, :end-line 53, :column 7, :line 53, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/color-chooser, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 20, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data])), :test true}, render-loop {:protocol-inline nil, :meta {:arglists (quote ([canvas])), :end-column 18, :end-line 45, :column 7, :line 45, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/render-loop, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 18, :method-params ([canvas]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([canvas])), :test true}, moved {:meta {:end-column 11, :end-line 22, :column 6, :line 22, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :file "01-pressure-draw/cljs_draw/core.cljs", :line 22, :column 1, :end-line 22, :end-column 11, :test true, :name cljs_draw.core/moved}, ->t8790 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner data app meta8791])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t8790, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([owner data app meta8791]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag cljs_draw.core/t8790, :variadic false, :max-fixed-arity 4}), :line 73, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner data app meta8791])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, set-canvas-size! {:protocol-inline nil, :meta {:arglists (quote ([el canvas])), :end-column 23, :end-line 16, :column 7, :line 16, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/set-canvas-size!, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 23, :method-params ([el canvas]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 2}), :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([el canvas])), :test true}, t8790 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t8790, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 73, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, points {:meta {:end-column 12, :end-line 21, :column 6, :line 21, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :file "01-pressure-draw/cljs_draw/core.cljs", :line 21, :column 1, :end-line 21, :end-column 12, :test true, :name cljs_draw.core/points}, t8813 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t8813, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 73, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, app-state {:meta {:end-column 19, :end-line 12, :column 10, :line 12, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :file "01-pressure-draw/cljs_draw/core.cljs", :line 12, :column 1, :end-line 12, :end-column 19, :test true, :name cljs_draw.core/app-state}, ->t8813 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner data app meta8814])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t8813, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([owner data app meta8814]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag cljs_draw.core/t8813, :variadic false, :max-fixed-arity 4}), :line 73, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner data app meta8814])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, render {:protocol-inline nil, :meta {:arglists (quote ([ctx])), :end-column 13, :end-line 39, :column 7, :line 39, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/render, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 13, :method-params ([ctx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 1}), :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ctx])), :test true}, app {:protocol-inline nil, :meta {:arglists (quote ([data owner])), :end-column 10, :end-line 72, :column 7, :line 72, :file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs"}, :name cljs_draw.core/app, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 10, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs_draw.core/t8813, :variadic false, :max-fixed-arity 2}), :line 72, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner])), :test true}}, :require-macros {dom om.dom, om.dom om.dom, om om.core, om.core om.core, cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:order [:colors :current-color :recur :x :y :pressure :color :else :target], :seen #{:y :pressure :color :else :recur :colors :current-color :x :target}}, :doc nil}