;; Analyzed by ClojureScript 0.0-3291
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name cljs_draw.core, :imports nil, :requires {mat thi.ng.geom.core.matrix, driver gamma-driver.drivers.basic, p gamma.program, dom om.dom, goog.color goog.color, thi.ng.geom.core thi.ng.geom.core, gamma-driver.drivers.basic gamma-driver.drivers.basic, clojure.browser.repl clojure.browser.repl, om.dom om.dom, color goog.color, thi.ng.geom.core.vector thi.ng.geom.core.vector, vec thi.ng.geom.core.vector, thi.ng.math.core thi.ng.math.core, cljs.core.async cljs.core.async, gamma.api gamma.api, gamma-driver.api gamma-driver.api, cljs_draw.util cljs_draw.util, gamma-driver.protocols gamma-driver.protocols, om.core om.core, om om.core, g gamma.api, gd gamma-driver.api, geom thi.ng.geom.core, gamma.program gamma.program, dp gamma-driver.protocols, repl clojure.browser.repl, thi.ng.geom.core.matrix thi.ng.geom.core.matrix}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, dropping-buffer cljs.core.async, M44 thi.ng.geom.core.matrix, PI thi.ng.math.core, >! cljs.core.async, listen cljs_draw.util, alts! cljs.core.async, put! cljs.core.async, get-from-storage cljs_draw.util}, :defs {t9945 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t9945, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 329, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t9608 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([color-input data owner meta9609])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t9608, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([color-input data owner meta9609]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 184, :max-fixed-arity 4, :fn-var true, :arglists (quote ([color-input data owner meta9609])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t9783 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t9783, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 329, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t9783 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([app data owner meta9784])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t9783, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([app data owner meta9784]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 329, :max-fixed-arity 4, :fn-var true, :arglists (quote ([app data owner meta9784])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t9692 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t9692, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 213, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, finalize-stroke {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 86, :column 7, :end-line 86, :end-column 22, :arglists (quote ([]))}, :name cljs_draw.core/finalize-stroke, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, load-state {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 69, :column 7, :end-line 69, :end-column 17, :arglists (quote ([]))}, :name cljs_draw.core/load-state, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-perspective-matrix {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 61, :column 7, :end-line 61, :end-column 29, :arglists (quote ([width height]))}, :name cljs_draw.core/get-perspective-matrix, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 29, :method-params ([width height]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 2, :fn-var true, :arglists (quote ([width height]))}, dimen {:name cljs_draw.core/dimen, :file "01-pressure-draw/cljs_draw/core.cljs", :line 28, :column 1, :end-line 28, :end-column 11, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 28, :column 6, :end-line 28, :end-column 11}}, color-chooser {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 282, :column 7, :end-line 282, :end-column 20, :arglists (quote ([data]))}, :name cljs_draw.core/color-chooser, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 20, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 282, :end-line 282, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, paint-meshes {:name cljs_draw.core/paint-meshes, :file "01-pressure-draw/cljs_draw/core.cljs", :line 30, :column 1, :end-line 30, :end-column 18, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 30, :column 6, :end-line 30, :end-column 18}}, u-p-matrix {:name cljs_draw.core/u-p-matrix, :file "01-pressure-draw/cljs_draw/core.cljs", :line 35, :column 1, :end-line 35, :end-column 16, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 35, :column 6, :end-line 35, :end-column 16}}, u-mv-matrix {:name cljs_draw.core/u-mv-matrix, :file "01-pressure-draw/cljs_draw/core.cljs", :line 38, :column 1, :end-line 38, :end-column 17, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 38, :column 6, :end-line 38, :end-column 17}}, render-loop {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 146, :column 7, :end-line 146, :end-column 18, :arglists (quote ([]))}, :name cljs_draw.core/render-loop, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, color-item {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 212, :column 7, :end-line 212, :end-column 17, :arglists (quote ([props owner]))}, :name cljs_draw.core/color-item, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 17, :method-params ([props owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 212, :end-line 212, :max-fixed-arity 2, :fn-var true, :arglists (quote ([props owner]))}, a-position {:name cljs_draw.core/a-position, :file "01-pressure-draw/cljs_draw/core.cljs", :line 44, :column 1, :end-line 44, :end-column 16, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 44, :column 6, :end-line 44, :end-column 16}}, t9611 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t9611, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 184, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, u-color {:name cljs_draw.core/u-color, :file "01-pressure-draw/cljs_draw/core.cljs", :line 41, :column 1, :end-line 41, :end-column 13, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 41, :column 6, :end-line 41, :end-column 13}}, add-to-stroke {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 101, :column 7, :end-line 101, :end-column 20, :arglists (quote ([point pressure]))}, :name cljs_draw.core/add-to-stroke, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 20, :method-params ([point pressure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 2, :fn-var true, :arglists (quote ([point pressure]))}, ->t9945 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([app data owner meta9946])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t9945, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([app data owner meta9946]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 329, :max-fixed-arity 4, :fn-var true, :arglists (quote ([app data owner meta9946])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, stroke-history {:name cljs_draw.core/stroke-history, :file "01-pressure-draw/cljs_draw/core.cljs", :line 32, :column 1, :end-line 32, :end-column 20, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 32, :column 6, :end-line 32, :end-column 20}}, ->t9692 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([color-item props owner meta9693])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t9692, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([color-item props owner meta9693]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 213, :max-fixed-arity 4, :fn-var true, :arglists (quote ([color-item props owner meta9693])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, init {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 315, :column 7, :end-line 315, :end-column 11, :arglists (quote ([node]))}, :name cljs_draw.core/init, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 11, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 315, :end-line 315, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, t9614 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t9614, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 213, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t9611 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([color-input data owner meta9612])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t9611, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([color-input data owner meta9612]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 184, :max-fixed-arity 4, :fn-var true, :arglists (quote ([color-input data owner meta9612])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, renderable {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 55, :column 7, :end-line 55, :end-column 17, :arglists (quote ([p mv color vertices vertex-count]))}, :name cljs_draw.core/renderable, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 17, :method-params ([p mv color vertices vertex-count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 5, :fn-var true, :arglists (quote ([p mv color vertices vertex-count]))}, debug {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 164, :column 7, :end-line 164, :end-column 12, :arglists (quote ([x]))}, :name cljs_draw.core/debug, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 164, :end-line 164, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, t9608 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t9608, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 184, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, boundary {:name cljs_draw.core/boundary, :file "01-pressure-draw/cljs_draw/core.cljs", :line 29, :column 1, :end-line 29, :end-column 14, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 29, :column 6, :end-line 29, :end-column 14}}, renderer {:name cljs_draw.core/renderer, :file "01-pressure-draw/cljs_draw/core.cljs", :line 33, :column 1, :end-line 33, :end-column 14, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 33, :column 6, :end-line 33, :end-column 14}}, ->t9614 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([color-item props owner meta9615])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t9614, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([color-item props owner meta9615]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 213, :max-fixed-arity 4, :fn-var true, :arglists (quote ([color-item props owner meta9615])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, clear-canvas {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 79, :column 7, :end-line 79, :end-column 19, :arglists (quote ([]))}, :name cljs_draw.core/clear-canvas, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-face {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 95, :column 7, :end-line 95, :end-column 15, :arglists (quote ([mesh p1 p2 p3]))}, :name cljs_draw.core/add-face, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 15, :method-params ([mesh p1 p2 p3]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 4, :fn-var true, :arglists (quote ([mesh p1 p2 p3]))}, signal-after-inactivity {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 171, :column 7, :end-line 171, :end-column 30, :arglists (quote ([ms]))}, :name cljs_draw.core/signal-after-inactivity, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 30, :method-params ([ms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 171, :end-line 171, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ms]))}, app-state {:name cljs_draw.core/app-state, :file "01-pressure-draw/cljs_draw/core.cljs", :line 23, :column 1, :end-line 23, :end-column 19, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 23, :column 10, :end-line 23, :end-column 19}}, undo {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 150, :column 7, :end-line 150, :end-column 11, :arglists (quote ([]))}, :name cljs_draw.core/undo, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 150, :end-line 150, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, start-stroke {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 90, :column 7, :end-line 90, :end-column 19, :arglists (quote ([point]))}, :name cljs_draw.core/start-stroke, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 19, :method-params ([point]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 1, :fn-var true, :arglists (quote ([point]))}, render {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 135, :column 7, :end-line 135, :end-column 13, :arglists (quote ([]))}, :name cljs_draw.core/render, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, current-mesh {:name cljs_draw.core/current-mesh, :file "01-pressure-draw/cljs_draw/core.cljs", :line 31, :column 1, :end-line 31, :end-column 18, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 31, :column 6, :end-line 31, :end-column 18}}, program-source {:name cljs_draw.core/program-source, :file "01-pressure-draw/cljs_draw/core.cljs", :line 47, :column 1, :end-line 47, :end-column 20, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 47, :column 6, :end-line 47, :end-column 20}}, color-input {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 183, :column 7, :end-line 183, :end-column 18, :arglists (quote ([data owner]))}, :name cljs_draw.core/color-input, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 18, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 183, :end-line 183, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, app {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 328, :column 7, :end-line 328, :end-column 10, :arglists (quote ([data owner]))}, :name cljs_draw.core/app, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 10, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 328, :end-line 328, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, save-state {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 64, :column 7, :end-line 64, :end-column 17, :arglists (quote ([]))}, :name cljs_draw.core/save-state, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, chan-handler {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 168, :column 7, :end-line 168, :end-column 19, :arglists (quote ([chan]))}, :name cljs_draw.core/chan-handler, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 19, :method-params ([chan]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 168, :end-line 168, :max-fixed-arity 1, :fn-var true, :arglists (quote ([chan]))}, render-mesh {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 126, :column 7, :end-line 126, :end-column 18, :arglists (quote ([mesh driver program pers mv]))}, :name cljs_draw.core/render-mesh, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 18, :method-params ([mesh driver program pers mv]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 5, :fn-var true, :arglists (quote ([mesh driver program pers mv]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, om om.core, om.core om.core, dom om.dom, om.dom om.dom, g gamma.api, gamma.api gamma.api}, :cljs.analyzer/constants {:seen #{:mouseup :hide-controls :fragment-shader :selected :react-key :color :onSelect :pers :else :vec3 :float :precision :listening-for-color :mouseout :recur :colors :output :vertex-shader :pending-color :vec2 :mediump :count :draw-mode :mat4 :gl :current-color :input :target :expanded :driver :mousedown :program :keywordize-keys :triangles :onRemove :data}, :order [:colors :current-color :listening-for-color :mat4 :vec3 :vec2 :vertex-shader :fragment-shader :precision :float :mediump :data :count :keywordize-keys :recur :else :draw-mode :triangles :gl :driver :program :pers :input :output :pending-color :mousedown :mouseup :mouseout :hide-controls :expanded :onSelect :color :onRemove :selected :react-key :target]}, :doc nil}