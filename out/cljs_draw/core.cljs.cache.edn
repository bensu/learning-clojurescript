;; Analyzed by ClojureScript 0.0-3291
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name cljs_draw.core, :imports nil, :requires {mat thi.ng.geom.core.matrix, driver gamma-driver.drivers.basic, math thi.ng.math.core, p gamma.program, dom om.dom, goog.color goog.color, thi.ng.geom.core thi.ng.geom.core, gamma-driver.drivers.basic gamma-driver.drivers.basic, clojure.browser.repl clojure.browser.repl, om.dom om.dom, color goog.color, thi.ng.geom.core.vector thi.ng.geom.core.vector, vec thi.ng.geom.core.vector, thi.ng.math.core thi.ng.math.core, cljs.core.async cljs.core.async, gamma.api gamma.api, gamma-driver.api gamma-driver.api, cljs_draw.util cljs_draw.util, gamma-driver.protocols gamma-driver.protocols, om.core om.core, om om.core, g gamma.api, gd gamma-driver.api, geom thi.ng.geom.core, gamma.program gamma.program, dp gamma-driver.protocols, repl clojure.browser.repl, thi.ng.geom.core.matrix thi.ng.geom.core.matrix}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, dropping-buffer cljs.core.async, M44 thi.ng.geom.core.matrix, PI thi.ng.math.core, >! cljs.core.async, listen cljs_draw.util, alts! cljs.core.async, put! cljs.core.async, get-from-storage cljs_draw.util}, :defs {t12961 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t12961, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 387, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, vec-equals {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 118, :column 7, :end-line 118, :end-column 17, :arglists (quote ([v1 v2]))}, :name cljs_draw.core/vec-equals, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 17, :method-params ([v1 v2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v1 v2]))}, finalize-stroke {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 97, :column 7, :end-line 97, :end-column 22, :arglists (quote ([]))}, :name cljs_draw.core/finalize-stroke, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, load-state {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 80, :column 7, :end-line 80, :end-column 17, :arglists (quote ([]))}, :name cljs_draw.core/load-state, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-perspective-matrix {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 72, :column 7, :end-line 72, :end-column 29, :arglists (quote ([width height]))}, :name cljs_draw.core/get-perspective-matrix, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 29, :method-params ([width height]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists (quote ([width height]))}, ->t12799 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([app data owner meta12800])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t12799, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([app data owner meta12800]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 387, :max-fixed-arity 4, :fn-var true, :arglists (quote ([app data owner meta12800])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, dimen {:name cljs_draw.core/dimen, :file "01-pressure-draw/cljs_draw/core.cljs", :line 28, :column 1, :end-line 28, :end-column 11, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 28, :column 6, :end-line 28, :end-column 11}}, color-chooser {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 336, :column 7, :end-line 336, :end-column 20, :arglists (quote ([data]))}, :name cljs_draw.core/color-chooser, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 20, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 336, :end-line 336, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, paint-meshes {:name cljs_draw.core/paint-meshes, :file "01-pressure-draw/cljs_draw/core.cljs", :line 30, :column 1, :end-line 30, :end-column 18, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 30, :column 6, :end-line 30, :end-column 18}}, u-p-matrix {:name cljs_draw.core/u-p-matrix, :file "01-pressure-draw/cljs_draw/core.cljs", :line 35, :column 1, :end-line 35, :end-column 16, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 35, :column 6, :end-line 35, :end-column 16}}, ->poly-points {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 111, :column 7, :end-line 111, :end-column 20, :arglists (quote ([points]))}, :name cljs_draw.core/->poly-points, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 20, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, u-mv-matrix {:name cljs_draw.core/u-mv-matrix, :file "01-pressure-draw/cljs_draw/core.cljs", :line 38, :column 1, :end-line 38, :end-column 17, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 38, :column 6, :end-line 38, :end-column 17}}, render-loop {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 200, :column 7, :end-line 200, :end-column 18, :arglists (quote ([]))}, :name cljs_draw.core/render-loop, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 200, :end-line 200, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, t12708 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t12708, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 267, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, a-value {:name cljs_draw.core/a-value, :file "01-pressure-draw/cljs_draw/core.cljs", :line 44, :column 1, :end-line 44, :end-column 13, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 44, :column 6, :end-line 44, :end-column 13}}, get-alpha {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 122, :column 7, :end-line 122, :end-column 16, :arglists (quote ([p c1 c2 c3 c4 middle m1 m2]))}, :name cljs_draw.core/get-alpha, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 16, :method-params ([p c1 c2 c3 c4 middle m1 m2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 8, :fn-var true, :arglists (quote ([p c1 c2 c3 c4 middle m1 m2]))}, t12624 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t12624, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 238, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, color-item {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 266, :column 7, :end-line 266, :end-column 17, :arglists (quote ([props owner]))}, :name cljs_draw.core/color-item, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 17, :method-params ([props owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 266, :end-line 266, :max-fixed-arity 2, :fn-var true, :arglists (quote ([props owner]))}, a-position {:name cljs_draw.core/a-position, :file "01-pressure-draw/cljs_draw/core.cljs", :line 47, :column 1, :end-line 47, :end-column 16, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 47, :column 6, :end-line 47, :end-column 16}}, ->t12627 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([color-input data owner meta12628])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t12627, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([color-input data owner meta12628]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 238, :max-fixed-arity 4, :fn-var true, :arglists (quote ([color-input data owner meta12628])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t12708 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([color-item props owner meta12709])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t12708, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([color-item props owner meta12709]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 267, :max-fixed-arity 4, :fn-var true, :arglists (quote ([color-item props owner meta12709])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, u-color {:name cljs_draw.core/u-color, :file "01-pressure-draw/cljs_draw/core.cljs", :line 41, :column 1, :end-line 41, :end-column 13, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 41, :column 6, :end-line 41, :end-column 13}}, add-to-stroke {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 132, :column 7, :end-line 132, :end-column 20, :arglists (quote ([point pressure]))}, :name cljs_draw.core/add-to-stroke, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 20, :method-params ([point pressure]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 132, :end-line 132, :max-fixed-arity 2, :fn-var true, :arglists (quote ([point pressure]))}, stroke-history {:name cljs_draw.core/stroke-history, :file "01-pressure-draw/cljs_draw/core.cljs", :line 32, :column 1, :end-line 32, :end-column 20, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 32, :column 6, :end-line 32, :end-column 20}}, t12627 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t12627, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 238, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, init {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 369, :column 7, :end-line 369, :end-column 11, :arglists (quote ([node]))}, :name cljs_draw.core/init, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 11, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 369, :end-line 369, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, ->t12630 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([color-item props owner meta12631])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t12630, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([color-item props owner meta12631]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 267, :max-fixed-arity 4, :fn-var true, :arglists (quote ([color-item props owner meta12631])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->vec2 {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 115, :column 7, :end-line 115, :end-column 13, :arglists (quote ([poly-point]))}, :name cljs_draw.core/->vec2, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 13, :method-params ([poly-point]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 1, :fn-var true, :arglists (quote ([poly-point]))}, ->t12624 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([color-input data owner meta12625])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t12624, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([color-input data owner meta12625]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 238, :max-fixed-arity 4, :fn-var true, :arglists (quote ([color-input data owner meta12625])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t12630 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t12630, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 267, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, renderable {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 65, :column 7, :end-line 65, :end-column 17, :arglists (quote ([p mv color vertices values vertex-count]))}, :name cljs_draw.core/renderable, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 17, :method-params ([p mv color vertices values vertex-count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 6, :fn-var true, :arglists (quote ([p mv color vertices values vertex-count]))}, debug {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 218, :column 7, :end-line 218, :end-column 12, :arglists (quote ([x]))}, :name cljs_draw.core/debug, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 218, :end-line 218, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, ->t12961 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([app data owner meta12962])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t12961, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([app data owner meta12962]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 387, :max-fixed-arity 4, :fn-var true, :arglists (quote ([app data owner meta12962])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, boundary {:name cljs_draw.core/boundary, :file "01-pressure-draw/cljs_draw/core.cljs", :line 29, :column 1, :end-line 29, :end-column 14, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 29, :column 6, :end-line 29, :end-column 14}}, renderer {:name cljs_draw.core/renderer, :file "01-pressure-draw/cljs_draw/core.cljs", :line 33, :column 1, :end-line 33, :end-column 14, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 33, :column 6, :end-line 33, :end-column 14}}, clear-canvas {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 90, :column 7, :end-line 90, :end-column 19, :arglists (quote ([]))}, :name cljs_draw.core/clear-canvas, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-face {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 106, :column 7, :end-line 106, :end-column 15, :arglists (quote ([mesh p1 p2 p3 v1 v2 v3]))}, :name cljs_draw.core/add-face, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 15, :method-params ([mesh p1 p2 p3 v1 v2 v3]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 106, :end-line 106, :max-fixed-arity 7, :fn-var true, :arglists (quote ([mesh p1 p2 p3 v1 v2 v3]))}, signal-after-inactivity {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 225, :column 7, :end-line 225, :end-column 30, :arglists (quote ([ms]))}, :name cljs_draw.core/signal-after-inactivity, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 30, :method-params ([ms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 225, :end-line 225, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ms]))}, app-state {:name cljs_draw.core/app-state, :file "01-pressure-draw/cljs_draw/core.cljs", :line 23, :column 1, :end-line 23, :end-column 19, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 23, :column 10, :end-line 23, :end-column 19}}, undo {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 204, :column 7, :end-line 204, :end-column 11, :arglists (quote ([]))}, :name cljs_draw.core/undo, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 204, :end-line 204, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, start-stroke {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 101, :column 7, :end-line 101, :end-column 19, :arglists (quote ([point]))}, :name cljs_draw.core/start-stroke, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 19, :method-params ([point]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 1, :fn-var true, :arglists (quote ([point]))}, render {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 189, :column 7, :end-line 189, :end-column 13, :arglists (quote ([]))}, :name cljs_draw.core/render, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 189, :end-line 189, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, current-mesh {:name cljs_draw.core/current-mesh, :file "01-pressure-draw/cljs_draw/core.cljs", :line 31, :column 1, :end-line 31, :end-column 18, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 31, :column 6, :end-line 31, :end-column 18}}, program-source {:name cljs_draw.core/program-source, :file "01-pressure-draw/cljs_draw/core.cljs", :line 53, :column 1, :end-line 53, :end-column 20, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 53, :column 6, :end-line 53, :end-column 20}}, color-input {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 237, :column 7, :end-line 237, :end-column 18, :arglists (quote ([data owner]))}, :name cljs_draw.core/color-input, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 18, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 237, :end-line 237, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, app {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 386, :column 7, :end-line 386, :end-column 10, :arglists (quote ([data owner]))}, :name cljs_draw.core/app, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 10, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 386, :end-line 386, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, t12799 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t12799, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 387, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, save-state {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 75, :column 7, :end-line 75, :end-column 17, :arglists (quote ([]))}, :name cljs_draw.core/save-state, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, chan-handler {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 222, :column 7, :end-line 222, :end-column 19, :arglists (quote ([chan]))}, :name cljs_draw.core/chan-handler, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 19, :method-params ([chan]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 222, :end-line 222, :max-fixed-arity 1, :fn-var true, :arglists (quote ([chan]))}, render-mesh {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 179, :column 7, :end-line 179, :end-column 18, :arglists (quote ([mesh driver program pers mv]))}, :name cljs_draw.core/render-mesh, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 18, :method-params ([mesh driver program pers mv]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 179, :end-line 179, :max-fixed-arity 5, :fn-var true, :arglists (quote ([mesh driver program pers mv]))}, v-value {:name cljs_draw.core/v-value, :file "01-pressure-draw/cljs_draw/core.cljs", :line 50, :column 1, :end-line 50, :end-column 13, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 50, :column 6, :end-line 50, :end-column 13}}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, om om.core, om.core om.core, dom om.dom, om.dom om.dom, g gamma.api, gamma.api gamma.api}, :cljs.analyzer/constants {:seen #{:mouseup :hide-controls :fragment-shader :selected :react-key :color :onSelect :pers :else :vec3 :float :precision :listening-for-color :mouseout :recur :colors :output :vertex-shader :pending-color :vec2 :mediump :count :draw-mode :mat4 :gl :current-color :input :target :expanded :driver :mousedown :program :keywordize-keys :triangles :onRemove :data}, :order [:colors :current-color :listening-for-color :mat4 :vec3 :float :vec2 :mediump :vertex-shader :fragment-shader :precision :data :count :keywordize-keys :recur :else :draw-mode :triangles :gl :driver :program :pers :input :output :pending-color :mousedown :mouseup :mouseout :hide-controls :expanded :onSelect :color :onRemove :selected :react-key :target]}, :doc nil}