;; Analyzed by ClojureScript 0.0-3308
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name cljs_draw.core, :imports nil, :requires {mat thi.ng.geom.core.matrix, driver gamma-driver.drivers.basic, math thi.ng.math.core, p gamma.program, dom om.dom, goog.color goog.color, thi.ng.geom.core thi.ng.geom.core, async cljs.core.async, gamma-driver.drivers.basic gamma-driver.drivers.basic, clojure.browser.repl clojure.browser.repl, v thi.ng.geom.core.vector, om.dom om.dom, color goog.color, thi.ng.geom.core.vector thi.ng.geom.core.vector, thi.ng.math.core thi.ng.math.core, cljs.core.async cljs.core.async, gamma.api gamma.api, gamma-driver.api gamma-driver.api, cljs_draw.util cljs_draw.util, gamma-driver.protocols gamma-driver.protocols, om.core om.core, om om.core, g gamma.api, gd gamma-driver.api, geom thi.ng.geom.core, gamma.program gamma.program, dp gamma-driver.protocols, repl clojure.browser.repl, thi.ng.geom.core.matrix thi.ng.geom.core.matrix}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, dropping-buffer cljs.core.async, M44 thi.ng.geom.core.matrix, PI thi.ng.math.core, >! cljs.core.async, listen cljs_draw.util, alts! cljs.core.async, put! cljs.core.async, get-from-storage cljs_draw.util}, :defs {shader-lerp {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 106, :column 7, :end-line 106, :end-column 18, :arglists (quote ([a b s]))}, :name cljs_draw.core/shader-lerp, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 18, :method-params ([a b s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 106, :end-line 106, :max-fixed-arity 3, :fn-var true, :arglists (quote ([a b s]))}, v-texcoord {:name cljs_draw.core/v-texcoord, :file "01-pressure-draw/cljs_draw/core.cljs", :line 99, :column 1, :end-line 99, :end-column 16, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 99, :column 6, :end-line 99, :end-column 16}}, vec-equals {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 270, :column 7, :end-line 270, :end-column 17, :arglists (quote ([v1 v2]))}, :name cljs_draw.core/vec-equals, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 17, :method-params ([v1 v2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 270, :end-line 270, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v1 v2]))}, take-into {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 47, :column 7, :end-line 47, :end-column 16, :arglists (quote ([coll chans]))}, :name cljs_draw.core/take-into, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 16, :method-params ([coll chans]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([coll chans]))}, default-vertex-position {:name cljs_draw.core/default-vertex-position, :file "01-pressure-draw/cljs_draw/core.cljs", :line 109, :column 1, :end-line 109, :end-column 29, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 109, :column 6, :end-line 109, :end-column 29}}, ->t11148 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([color-item props owner meta11149])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t11148, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([color-item props owner meta11149]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 482, :max-fixed-arity 4, :fn-var true, :arglists (quote ([color-item props owner meta11149])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, angle-of-vectors {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 274, :column 7, :end-line 274, :end-column 23, :arglists (quote ([v1 v2]))}, :name cljs_draw.core/angle-of-vectors, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 23, :method-params ([v1 v2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 274, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v1 v2]))}, t11148 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t11148, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 482, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, finalize-stroke {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 261, :column 7, :end-line 261, :end-column 22, :arglists (quote ([]))}, :name cljs_draw.core/finalize-stroke, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 261, :end-line 261, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, load-state {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 194, :column 7, :end-line 194, :end-column 17, :arglists (quote ([]))}, :name cljs_draw.core/load-state, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 194, :end-line 194, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, merge-in! {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 55, :column 7, :end-line 55, :end-column 16, :arglists (quote ([data key m]))}, :name cljs_draw.core/merge-in!, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 16, :method-params ([data key m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data key m]))}, get-perspective-matrix {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 351, :column 7, :end-line 351, :end-column 29, :arglists (quote ([width height]))}, :name cljs_draw.core/get-perspective-matrix, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 29, :method-params ([width height]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 351, :end-line 351, :max-fixed-arity 2, :fn-var true, :arglists (quote ([width height]))}, conn {:name cljs_draw.core/conn, :file "01-pressure-draw/cljs_draw/core.cljs", :line 21, :column 1, :end-line 21, :end-column 14, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 21, :column 10, :end-line 21, :end-column 14}}, color-chooser {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 551, :column 7, :end-line 551, :end-column 20, :arglists (quote ([data]))}, :name cljs_draw.core/color-chooser, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 20, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 551, :end-line 551, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, ->t11145 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([color-input data owner meta11146])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t11145, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([color-input data owner meta11146]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 453, :max-fixed-arity 4, :fn-var true, :arglists (quote ([color-input data owner meta11146])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, u-p-matrix {:name cljs_draw.core/u-p-matrix, :file "01-pressure-draw/cljs_draw/core.cljs", :line 75, :column 1, :end-line 75, :end-column 16, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 75, :column 6, :end-line 75, :end-column 16}}, make-mesh {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 240, :column 7, :end-line 240, :end-column 16, :arglists (quote ([color brush]))}, :name cljs_draw.core/make-mesh, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 16, :method-params ([color brush]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 240, :end-line 240, :max-fixed-arity 2, :fn-var true, :arglists (quote ([color brush]))}, t11510 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t11510, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 585, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, u-mv-matrix {:name cljs_draw.core/u-mv-matrix, :file "01-pressure-draw/cljs_draw/core.cljs", :line 78, :column 1, :end-line 78, :end-column 17, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 78, :column 6, :end-line 78, :end-column 17}}, render-loop {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 446, :column 7, :end-line 446, :end-column 18, :arglists (quote ([]))}, :name cljs_draw.core/render-loop, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 446, :end-line 446, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, load-texture {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 40, :column 7, :end-line 40, :end-column 19, :arglists (quote ([url]))}, :name cljs_draw.core/load-texture, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 19, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url]))}, a-value {:name cljs_draw.core/a-value, :file "01-pressure-draw/cljs_draw/core.cljs", :line 87, :column 1, :end-line 87, :end-column 13, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 87, :column 6, :end-line 87, :end-column 13}}, add-radial-brush {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 141, :column 7, :end-line 141, :end-column 23, :arglists (quote ([name brush]))}, :name cljs_draw.core/add-radial-brush, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 23, :method-params ([name brush]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 2, :fn-var true, :arglists (quote ([name brush]))}, color-item {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 481, :column 7, :end-line 481, :end-column 17, :arglists (quote ([props owner]))}, :name cljs_draw.core/color-item, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 17, :method-params ([props owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 481, :end-line 481, :max-fixed-arity 2, :fn-var true, :arglists (quote ([props owner]))}, a-position {:name cljs_draw.core/a-position, :file "01-pressure-draw/cljs_draw/core.cljs", :line 90, :column 1, :end-line 90, :end-column 16, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 90, :column 6, :end-line 90, :end-column 16}}, constrain-stroke {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 281, :column 7, :end-line 281, :end-column 23, :arglists (quote ([dir]))}, :name cljs_draw.core/constrain-stroke, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 23, :method-params ([dir]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 281, :end-line 281, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dir]))}, u-color {:name cljs_draw.core/u-color, :file "01-pressure-draw/cljs_draw/core.cljs", :line 81, :column 1, :end-line 81, :end-column 13, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 81, :column 6, :end-line 81, :end-column 13}}, add-to-stroke {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 339, :column 7, :end-line 339, :end-column 20, :arglists (quote ([point pressure mesh brush]))}, :name cljs_draw.core/add-to-stroke, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 20, :method-params ([point pressure mesh brush]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 339, :end-line 339, :max-fixed-arity 4, :fn-var true, :arglists (quote ([point pressure mesh brush]))}, add-to-linear-stroke {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 288, :column 7, :end-line 288, :end-column 27, :arglists (quote ([point pressure mesh]))}, :name cljs_draw.core/add-to-linear-stroke, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 27, :method-params ([point pressure mesh]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 288, :end-line 288, :max-fixed-arity 3, :fn-var true, :arglists (quote ([point pressure mesh]))}, add-brush {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 121, :column 7, :end-line 121, :end-column 16, :arglists (quote ([name type brush]))}, :name cljs_draw.core/add-brush, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 16, :method-params ([name type brush]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 3, :fn-var true, :arglists (quote ([name type brush]))}, u-sampler {:name cljs_draw.core/u-sampler, :file "01-pressure-draw/cljs_draw/core.cljs", :line 84, :column 1, :end-line 84, :end-column 15, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 84, :column 6, :end-line 84, :end-column 15}}, ->t11226 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([color-item props owner meta11227])), :file nil}, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t11226, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([color-item props owner meta11227]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 482, :max-fixed-arity 4, :fn-var true, :arglists (quote ([color-item props owner meta11227])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t11142 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([color-input data owner meta11143])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t11142, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([color-input data owner meta11143]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 453, :max-fixed-arity 4, :fn-var true, :arglists (quote ([color-input data owner meta11143])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, add-radial-face {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 320, :column 7, :end-line 320, :end-column 22, :arglists (quote ([mesh p1 p2 p3 t1 t2 t3]))}, :name cljs_draw.core/add-radial-face, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 22, :method-params ([mesh p1 p2 p3 t1 t2 t3]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 320, :end-line 320, :max-fixed-arity 7, :fn-var true, :arglists (quote ([mesh p1 p2 p3 t1 t2 t3]))}, add-linear-face {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 283, :column 7, :end-line 283, :end-column 22, :arglists (quote ([mesh p1 p2 p3 v1 v2 v3]))}, :name cljs_draw.core/add-linear-face, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 22, :method-params ([mesh p1 p2 p3 v1 v2 v3]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 283, :end-line 283, :max-fixed-arity 7, :fn-var true, :arglists (quote ([mesh p1 p2 p3 v1 v2 v3]))}, validate-brush {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 344, :column 7, :end-line 344, :end-column 21, :arglists (quote ([brush mesh]))}, :name cljs_draw.core/validate-brush, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 21, :method-params ([brush mesh]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 344, :end-line 344, :max-fixed-arity 2, :fn-var true, :arglists (quote ([brush mesh]))}, t11317 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t11317, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 585, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t11145 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t11145, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 453, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, shader-rand {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 102, :column 7, :end-line 102, :end-column 18, :arglists (quote ([v]))}, :name cljs_draw.core/shader-rand, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 18, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, add-to-radial-stroke {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 325, :column 7, :end-line 325, :end-column 27, :arglists (quote ([point pressure mesh]))}, :name cljs_draw.core/add-to-radial-stroke, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 27, :method-params ([point pressure mesh]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 325, :end-line 325, :max-fixed-arity 3, :fn-var true, :arglists (quote ([point pressure mesh]))}, t11142 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t11142, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 453, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, clear-canvas {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 215, :column 7, :end-line 215, :end-column 19, :arglists (quote ([]))}, :name cljs_draw.core/clear-canvas, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 215, :end-line 215, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, signal-after-inactivity {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 61, :column 7, :end-line 61, :end-column 30, :arglists (quote ([ms]))}, :name cljs_draw.core/signal-after-inactivity, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 30, :method-params ([ms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ms]))}, app-state {:name cljs_draw.core/app-state, :file "01-pressure-draw/cljs_draw/core.cljs", :line 26, :column 1, :end-line 26, :end-column 19, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 26, :column 10, :end-line 26, :end-column 19}}, undo {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 221, :column 7, :end-line 221, :end-column 11, :arglists (quote ([]))}, :name cljs_draw.core/undo, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 221, :end-line 221, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-linear-brush {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 138, :column 7, :end-line 138, :end-column 23, :arglists (quote ([name brush]))}, :name cljs_draw.core/add-linear-brush, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 23, :method-params ([name brush]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 2, :fn-var true, :arglists (quote ([name brush]))}, start-stroke {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 247, :column 7, :end-line 247, :end-column 19, :arglists (quote ([point color brush]))}, :name cljs_draw.core/start-stroke, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 19, :method-params ([point color brush]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 247, :end-line 247, :max-fixed-arity 3, :fn-var true, :arglists (quote ([point color brush]))}, render {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 421, :column 7, :end-line 421, :end-column 13, :arglists (quote ([]))}, :name cljs_draw.core/render, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 421, :end-line 421, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, a-texcoord {:name cljs_draw.core/a-texcoord, :file "01-pressure-draw/cljs_draw/core.cljs", :line 93, :column 1, :end-line 93, :end-column 16, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 93, :column 6, :end-line 93, :end-column 16}}, get-brush {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 118, :column 7, :end-line 118, :end-column 16, :arglists (quote ([state name]))}, :name cljs_draw.core/get-brush, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 16, :method-params ([state name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state name]))}, color-input {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 452, :column 7, :end-line 452, :end-column 18, :arglists (quote ([data owner]))}, :name cljs_draw.core/color-input, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 18, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 452, :end-line 452, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, init-renderer {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 354, :column 7, :end-line 354, :end-column 20, :arglists (quote ([node brushes]))}, :name cljs_draw.core/init-renderer, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 20, :method-params ([node brushes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 354, :end-line 354, :max-fixed-arity 2, :fn-var true, :arglists (quote ([node brushes]))}, app {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 584, :column 7, :end-line 584, :end-column 10, :arglists (quote ([data owner]))}, :name cljs_draw.core/app, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 10, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 584, :end-line 584, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, ->t11510 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([app data owner meta11511])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t11510, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([app data owner meta11511]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 585, :max-fixed-arity 4, :fn-var true, :arglists (quote ([app data owner meta11511])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t11317 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([app data owner meta11318])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/->t11317, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :method-params ([app data owner meta11318]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 585, :max-fixed-arity 4, :fn-var true, :arglists (quote ([app data owner meta11318])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t11226 {:num-fields 4, :protocols #{om.core/IWillUnmount om.core/IRender cljs.core/IMeta om.core/IInitState om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core/t11226, :file "01-pressure-draw/cljs_draw/core.cljs", :type true, :anonymous true, :column 3, :line 482, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, save-state {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 185, :column 7, :end-line 185, :end-column 17, :arglists (quote ([]))}, :name cljs_draw.core/save-state, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, chan-handler {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 58, :column 7, :end-line 58, :end-column 19, :arglists (quote ([chan]))}, :name cljs_draw.core/chan-handler, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 19, :method-params ([chan]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists (quote ([chan]))}, compile-brush {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 114, :column 7, :end-line 114, :end-column 20, :arglists (quote ([driver props]))}, :name cljs_draw.core/compile-brush, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 20, :method-params ([driver props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 2, :fn-var true, :arglists (quote ([driver props]))}, render-mesh {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 386, :column 7, :end-line 386, :end-column 18, :arglists (quote ([gl mesh driver brush program textures pers mv]))}, :name cljs_draw.core/render-mesh, :variadic false, :file "01-pressure-draw/cljs_draw/core.cljs", :end-column 18, :method-params ([gl mesh driver brush program textures pers mv]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 386, :end-line 386, :max-fixed-arity 8, :fn-var true, :arglists (quote ([gl mesh driver brush program textures pers mv]))}, v-value {:name cljs_draw.core/v-value, :file "01-pressure-draw/cljs_draw/core.cljs", :line 96, :column 1, :end-line 96, :end-column 13, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core.cljs", :line 96, :column 6, :end-line 96, :end-column 13}}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, om om.core, om.core om.core, dom om.dom, om.dom om.dom, g gamma.api, gamma.api gamma.api}, :cljs.analyzer/constants {:seen #{:mouseup :hide-controls :min :nearest :transparent :fragment-shader :selected :react-key :color :onSelect :pers :stroke-history :else :mag :vec3 :float :name :solid-linear :precision :listening-for-color :current-brush :mouseout :render-ctx :compiled-programs :recur :colors :output :boundary :immutable? :vertex-shader :pending-color :brushes :vec2 :filter :solid-radial :current-mesh :mediump :from :id :count :draw-mode :mat4 :radial :gl :spray :current-color :textures :blend :input :linear :target :expanded :driver :mousedown :brush-type :sampler2D :keywordize-keys :texture :a :triangles :paint-meshes :onRemove :to :data :dimen}, :order [:stroke-history :listening-for-color :current-brush :render-ctx :colors :brushes :current-mesh :current-color :paint-meshes :transparent :dimen :boundary :recur :else :input :output :mat4 :vec3 :sampler2D :float :vec2 :mediump :precision :brush-type :name :driver :compiled-programs :vertex-shader :fragment-shader :linear :radial :solid-linear :spray :solid-radial :texture :a :keywordize-keys :gl :pers :textures :blend :from :to :data :count :filter :id :immutable? :min :mag :nearest :draw-mode :triangles :pending-color :mousedown :mouseup :mouseout :hide-controls :expanded :onSelect :color :onRemove :selected :react-key :target]}, :doc nil}