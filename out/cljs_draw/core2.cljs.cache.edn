;; Analyzed by ClojureScript 0.0-3291
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name cljs_draw.core2, :imports nil, :requires {mat thi.ng.geom.core.matrix, driver gamma-driver.drivers.basic, p gamma.program, dom om.dom, thi.ng.geom.core thi.ng.geom.core, gamma-driver.drivers.basic gamma-driver.drivers.basic, clojure.browser.repl clojure.browser.repl, om.dom om.dom, cljs.core.async cljs.core.async, gamma.api gamma.api, cljs_draw.util cljs_draw.util, gamma-driver.protocols gamma-driver.protocols, om.core om.core, om om.core, g gamma.api, geom thi.ng.geom.core, gamma.program gamma.program, dp gamma-driver.protocols, repl clojure.browser.repl, thi.ng.geom.core.matrix thi.ng.geom.core.matrix}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, dropping-buffer cljs.core.async, M44 thi.ng.geom.core.matrix, >! cljs.core.async, listen cljs_draw.util, alts! cljs.core.async, put! cljs.core.async, get-from-storage cljs_draw.util}, :defs {->t13871 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([app data owner meta13872])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core2/->t13871, :variadic false, :file "01-pressure-draw/cljs_draw/core2.cljs", :method-params ([app data owner meta13872]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 74, :max-fixed-arity 4, :fn-var true, :arglists (quote ([app data owner meta13872])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t13868 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([app data owner meta13869])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core2/->t13868, :variadic false, :file "01-pressure-draw/cljs_draw/core2.cljs", :method-params ([app data owner meta13869]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 74, :max-fixed-arity 4, :fn-var true, :arglists (quote ([app data owner meta13869])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, get-perspective-matrix {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core2.cljs", :line 45, :column 7, :end-line 45, :end-column 29, :arglists (quote ([width height]))}, :name cljs_draw.core2/get-perspective-matrix, :variadic false, :file "01-pressure-draw/cljs_draw/core2.cljs", :end-column 29, :method-params ([width height]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 2, :fn-var true, :arglists (quote ([width height]))}, conn {:name cljs_draw.core2/conn, :file "01-pressure-draw/cljs_draw/core2.cljs", :line 16, :column 1, :end-line 16, :end-column 14, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core2.cljs", :line 16, :column 10, :end-line 16, :end-column 14}}, u-p-matrix {:name cljs_draw.core2/u-p-matrix, :file "01-pressure-draw/cljs_draw/core2.cljs", :line 24, :column 1, :end-line 24, :end-column 16, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core2.cljs", :line 24, :column 6, :end-line 24, :end-column 16}}, ->Float32Array {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core2.cljs", :line 48, :column 7, :end-line 48, :end-column 21, :arglists (quote ([vec]))}, :name cljs_draw.core2/->Float32Array, :variadic false, :file "01-pressure-draw/cljs_draw/core2.cljs", :end-column 21, :method-params ([vec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vec]))}, u-mv-matrix {:name cljs_draw.core2/u-mv-matrix, :file "01-pressure-draw/cljs_draw/core2.cljs", :line 27, :column 1, :end-line 27, :end-column 17, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core2.cljs", :line 27, :column 6, :end-line 27, :end-column 17}}, a-position {:name cljs_draw.core2/a-position, :file "01-pressure-draw/cljs_draw/core2.cljs", :line 30, :column 1, :end-line 30, :end-column 16, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core2.cljs", :line 30, :column 6, :end-line 30, :end-column 16}}, init {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core2.cljs", :line 54, :column 7, :end-line 54, :end-column 11, :arglists (quote ([node]))}, :name cljs_draw.core2/init, :variadic false, :file "01-pressure-draw/cljs_draw/core2.cljs", :end-column 11, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, t13868 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core2/t13868, :file "01-pressure-draw/cljs_draw/core2.cljs", :type true, :anonymous true, :column 3, :line 74, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, renderable {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core2.cljs", :line 40, :column 7, :end-line 40, :end-column 17, :arglists (quote ([p mv vertices]))}, :name cljs_draw.core2/renderable, :variadic false, :file "01-pressure-draw/cljs_draw/core2.cljs", :end-column 17, :method-params ([p mv vertices]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 3, :fn-var true, :arglists (quote ([p mv vertices]))}, t13871 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name cljs_draw.core2/t13871, :file "01-pressure-draw/cljs_draw/core2.cljs", :type true, :anonymous true, :column 3, :line 74, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, app-state {:name cljs_draw.core2/app-state, :file "01-pressure-draw/cljs_draw/core2.cljs", :line 19, :column 1, :end-line 19, :end-column 19, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core2.cljs", :line 19, :column 10, :end-line 19, :end-column 19}}, program-source {:name cljs_draw.core2/program-source, :file "01-pressure-draw/cljs_draw/core2.cljs", :line 33, :column 1, :end-line 33, :end-column 20, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core2.cljs", :line 33, :column 6, :end-line 33, :end-column 20}}, app {:protocol-inline nil, :meta {:file "/Users/james/projects/cljs-draw/01-pressure-draw/cljs_draw/core2.cljs", :line 73, :column 7, :end-line 73, :end-column 10, :arglists (quote ([data owner]))}, :name cljs_draw.core2/app, :variadic false, :file "01-pressure-draw/cljs_draw/core2.cljs", :end-column 10, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, om om.core, om.core om.core, dom om.dom, om.dom om.dom, g gamma.api, gamma.api gamma.api}, :cljs.analyzer/constants {:seen #{:fragment-shader :vec3 :listening-for-color :colors :vertex-shader :draw-mode :mat4 :current-color :target :triangles}, :order [:colors :current-color :listening-for-color :mat4 :vec3 :vertex-shader :fragment-shader :draw-mode :triangles :target]}, :doc nil}